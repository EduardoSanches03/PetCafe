{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/clientes.service\";\nimport * as i2 from \"@angular/router\";\nconst _c0 = \".container[_ngcontent-%COMP%]{\\n    background-color: blanchedalmond;\\n    \\n}\\nul[_ngcontent-%COMP%]{\\n    \\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvY29tcG9uZW50cy9saXN0YS1jbGllbnRlcy9saXN0YS1jbGllbnRlcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0NBQWdDOztBQUVwQztBQUNBOztBQUVBIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lcntcclxuICAgIGJhY2tncm91bmQtY29sb3I6IGJsYW5jaGVkYWxtb25kO1xyXG4gICAgXHJcbn1cclxudWx7XHJcbiAgICBcclxufSJdLCJzb3VyY2VSb290IjoiIn0= */\";\nexport class ListaClientesComponent {\n  constructor(clientesService, router) {\n    this.clientesService = clientesService;\n    this.router = router;\n    this.tituloFormulario = '';\n    this.clientes = [];\n  }\n  ngOnInit() {\n    this.obterClientes();\n  }\n  enviarFormulario() {\n    const cliente = this.formulario.value;\n    this.clientesService.cadastrar(cliente).subscribe(result => {\n      alert('Cliente inserido com sucesso.');\n      this.router.navigate([\"/home\"]);\n    });\n  }\n  obterClientes() {\n    this.clientesService.listar().subscribe(clientes => {\n      this.clientes = clientes;\n    }, error => {\n      console.error('Erro ao obter clientes', error);\n    });\n  }\n  static #_ = this.ɵfac = function ListaClientesComponent_Factory(t) {\n    return new (t || ListaClientesComponent)(i0.ɵɵdirectiveInject(i1.ClientesService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListaClientesComponent,\n    selectors: [[\"app-clientes\"]],\n    decls: 26,\n    vars: 3,\n    consts: [[\"lang\", \"en\"], [\"charset\", \"UTF-8\"], [\"name\", \"viewport\", \"content\", \"width=device-width, initial-scale=1.0\"], [1, \"container\"]],\n    template: function ListaClientesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"html\", 0)(1, \"head\");\n        i0.ɵɵelement(2, \"meta\", 1)(3, \"meta\", 2);\n        i0.ɵɵelementStart(4, \"title\");\n        i0.ɵɵtext(5, \"Document\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(6, \"body\", 3);\n        i0.ɵɵtext(7, \" hello \");\n        i0.ɵɵelementStart(8, \"table\")(9, \"tr\")(10, \"th\");\n        i0.ɵɵtext(11, \"Nome\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"th\");\n        i0.ɵɵtext(13, \"email\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"th\");\n        i0.ɵɵtext(15, \"idade\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"tr\");\n        i0.ɵɵtext(17, \"\\n<*ngFor=\\\"let cliente of clientes\\\"> \");\n        i0.ɵɵelementStart(18, \"td\");\n        i0.ɵɵtext(19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(20, \" - \");\n        i0.ɵɵelementStart(21, \"td\");\n        i0.ɵɵtext(22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \" - \");\n        i0.ɵɵelementStart(24, \"td\");\n        i0.ɵɵtext(25);\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(19);\n        i0.ɵɵtextInterpolate(ctx.cliente.nome);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.cliente.email);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate(ctx.cliente.idade);\n      }\n    },\n    styles: [_c0, _c0]\n  });\n}","map":{"version":3,"names":["ListaClientesComponent","constructor","clientesService","router","tituloFormulario","clientes","ngOnInit","obterClientes","enviarFormulario","cliente","formulario","value","cadastrar","subscribe","result","alert","navigate","listar","error","console","_","i0","ɵɵdirectiveInject","i1","ClientesService","i2","Router","_2","selectors","decls","vars","consts","template","ListaClientesComponent_Template","rf","ctx","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","nome","email","idade"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\lista-clientes\\lista-clientes.component.ts","C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\lista-clientes\\lista-clientes.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClientesService } from 'src/app/clientes.service';\nimport { Cliente } from 'src/app/Cliente';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './lista-clientes.component.html',\n  styleUrls: ['./lista-clientes.component.css']\n})\nexport class ListaClientesComponent implements OnInit {\n  formulario: any;\n  tituloFormulario: string = '';\n  clientes: Cliente[]=[];\n  \n  constructor(private clientesService : ClientesService, private router : Router) { }\n\n  ngOnInit(): void {\n  this.obterClientes();\n  }\n\n  enviarFormulario(): void {\n  const cliente : Cliente = this.formulario.value;\n  this.clientesService.cadastrar(cliente).subscribe(result => {\n  alert('Cliente inserido com sucesso.');\n  this.router.navigate([\"/home\"]);\n  })\n  }\n  obterClientes(): void {\n    this.clientesService.listar().subscribe(\n      (clientes) => {\n        this.clientes = clientes;\n      },\n      (error) => {\n        console.error('Erro ao obter clientes', error);\n      }\n    );\n  }}","<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n    <title>Document</title>\n    <link rel=\"stylesheet\" href=\"lista-clientes.component.css\">\n</head>\n<body class=\"container\">\n    \nhello\n\n<table>\n  <tr>\n      <th>Nome</th>\n      <th>email</th>\n      <th>idade</th>\n  </tr>\n  <tr>\n<*ngFor=\"let cliente of clientes\">\n  <td>{{ cliente.nome }}</td> \n  - <td>{{ cliente.email }}</td> -\n  <td>{{ cliente.idade }}</td>\n</tr>\n</table>\n\n\n</body>\n</html>"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}