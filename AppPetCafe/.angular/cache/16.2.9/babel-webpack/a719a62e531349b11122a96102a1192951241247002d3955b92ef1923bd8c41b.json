{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { of, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ProdutosService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/Produto';\n  }\n  listar() {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get(url);\n  }\n  buscar(codigo) {\n    const url = `${this.apiUrl}/buscar/${codigo}`;\n    return this.http.get(url);\n  }\n  cadastrarProduto(produto) {\n    const url = `${this.apiUrl}/Cadastrar`;\n    const httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    return this.http.post(url, produto, httpOptions).pipe(catchError(this.handleError));\n  }\n  handleError(error) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Erro:', error.error.message);\n    } else {\n      console.error(`Código de erro ${error.status}, ` + `mensagem: ${error.error}`);\n    }\n    // Aqui você pode verificar o código de status\n    if (error.status === 201) {\n      // Lida com a resposta do servidor 201 conforme necessário\n      // Por exemplo, você pode acessar o corpo da resposta\n      console.log('Corpo da resposta:', error.error);\n      // Retornar algo útil ou vazio, dependendo da sua lógica\n      return of(); // Importe 'of' do 'rxjs' se não estiver importado\n    }\n\n    return throwError('Algo deu errado; por favor, tente novamente mais tarde.');\n  }\n  alterar(produto) {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put(url, produto, httpOptions);\n  }\n  excluir(codigo) {\n    const url = `${this.apiUrl}/buscar/${codigo}`;\n    return this.http.delete(url, httpOptions);\n  }\n  static #_ = this.ɵfac = function ProdutosService_Factory(t) {\n    return new (t || ProdutosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProdutosService,\n    factory: ProdutosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","of","throwError","catchError","httpOptions","headers","ProdutosService","constructor","http","apiUrl","listar","url","get","buscar","codigo","cadastrarProduto","produto","post","pipe","handleError","error","ErrorEvent","console","message","status","log","alterar","put","excluir","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\Servico\\ProdutoServico\\produtos.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Produto } from 'src/app/Model/Produto'; \nimport { catchError } from 'rxjs/operators';\nimport { tap } from 'rxjs/operators';\n\nconst httpOptions = {headers: new HttpHeaders({'Content-Type' : 'application/json'}\n)}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ProdutosService {\napiUrl = 'http://localhost:5000/Produto';\n\nconstructor(private http: HttpClient) { }\nlistar(): Observable<Produto[]> {const url = `${this.apiUrl}/listar`;\nreturn this.http.get<Produto[]>(url);\n}\nbuscar(codigo: string): Observable<Produto> {const url = `${this.apiUrl}/buscar/${codigo}`;\nreturn this.http.get<Produto>(url);\n}\ncadastrarProduto(produto: Produto): Observable<any> {\n    const url = `${this.apiUrl}/Cadastrar`;\n    const httpOptions = {\n      headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n    };\n  \n    return this.http.post(url, produto, httpOptions).pipe(\n      catchError(this.handleError)\n    );\n  }\n  \n  private handleError(error: HttpErrorResponse) {\n    if (error.error instanceof ErrorEvent) {\n      console.error('Erro:', error.error.message);\n    } else {\n      console.error(`Código de erro ${error.status}, ` + `mensagem: ${error.error}`);\n    }\n  \n    // Aqui você pode verificar o código de status\n    if (error.status === 201) {\n      // Lida com a resposta do servidor 201 conforme necessário\n      // Por exemplo, você pode acessar o corpo da resposta\n      console.log('Corpo da resposta:', error.error);\n      // Retornar algo útil ou vazio, dependendo da sua lógica\n      return of(); // Importe 'of' do 'rxjs' se não estiver importado\n    }\n  \n    return throwError('Algo deu errado; por favor, tente novamente mais tarde.');\n  }\n  \n  \nalterar(produto: Produto): Observable<any> {const url = `${this.apiUrl}/alterar`;\nreturn this.http.put<Produto>(url, produto, httpOptions);\n}\nexcluir(codigo: string): Observable<any> {const url = `${this.apiUrl}/buscar/${codigo}`;\nreturn this.http.delete<string>(url, httpOptions);\n}}"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAE9D,SAAqBC,EAAE,EAAEC,UAAU,QAAQ,MAAM;AAEjD,SAASC,UAAU,QAAQ,gBAAgB;;;AAG3C,MAAMC,WAAW,GAAG;EAACC,OAAO,EAAE,IAAIL,WAAW,CAAC;IAAC,cAAc,EAAG;EAAkB,CAAC;AAClF,CAAC;AAMF,OAAM,MAAOM,eAAe;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAG,+BAA+B;EAEA;EACxCC,MAAMA,CAAA;IAA2B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACpE,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC;EACpC;EACAE,MAAMA,CAACC,MAAc;IAAwB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWK,MAAM,EAAE;IAC1F,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAUD,GAAG,CAAC;EAClC;EACAI,gBAAgBA,CAACC,OAAgB;IAC7B,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAY;IACtC,MAAML,WAAW,GAAG;MAClBC,OAAO,EAAE,IAAIL,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IAED,OAAO,IAAI,CAACQ,IAAI,CAACS,IAAI,CAACN,GAAG,EAAEK,OAAO,EAAEZ,WAAW,CAAC,CAACc,IAAI,CACnDf,UAAU,CAAC,IAAI,CAACgB,WAAW,CAAC,CAC7B;EACH;EAEQA,WAAWA,CAACC,KAAwB;IAC1C,IAAIA,KAAK,CAACA,KAAK,YAAYC,UAAU,EAAE;MACrCC,OAAO,CAACF,KAAK,CAAC,OAAO,EAAEA,KAAK,CAACA,KAAK,CAACG,OAAO,CAAC;KAC5C,MAAM;MACLD,OAAO,CAACF,KAAK,CAAC,kBAAkBA,KAAK,CAACI,MAAM,IAAI,GAAG,aAAaJ,KAAK,CAACA,KAAK,EAAE,CAAC;;IAGhF;IACA,IAAIA,KAAK,CAACI,MAAM,KAAK,GAAG,EAAE;MACxB;MACA;MACAF,OAAO,CAACG,GAAG,CAAC,oBAAoB,EAAEL,KAAK,CAACA,KAAK,CAAC;MAC9C;MACA,OAAOnB,EAAE,EAAE,CAAC,CAAC;;;IAGf,OAAOC,UAAU,CAAC,yDAAyD,CAAC;EAC9E;EAGFwB,OAAOA,CAACV,OAAgB;IAAoB,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,UAAU;IAChF,OAAO,IAAI,CAACD,IAAI,CAACmB,GAAG,CAAUhB,GAAG,EAAEK,OAAO,EAAEZ,WAAW,CAAC;EACxD;EACAwB,OAAOA,CAACd,MAAc;IAAoB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWK,MAAM,EAAE;IACvF,OAAO,IAAI,CAACN,IAAI,CAACqB,MAAM,CAASlB,GAAG,EAAEP,WAAW,CAAC;EACjD;EAAC,QAAA0B,CAAA,G;qBA9CYxB,eAAe,EAAAyB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAf7B,eAAe;IAAA8B,OAAA,EAAf9B,eAAe,CAAA+B,IAAA;IAAAC,UAAA,EAHZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}