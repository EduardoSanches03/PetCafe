{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nexport let ProdutosComponent = class ProdutosComponent {\n  constructor(produtoService, router, fornecedorService) {\n    this.produtoService = produtoService;\n    this.router = router;\n    this.fornecedorService = fornecedorService;\n    this.tituloFormulario = '';\n  }\n  ngOnInit() {\n    this.tituloFormulario = 'Novo Produto';\n    this.fornecedorService.listar().subscribe(fornecedor => {\n      this.fornecedor = fornecedor;\n      if (this.fornecedor && this.fornecedor.length > 0) {\n        this.formulario_produto.get('fornecedor')?.setValue(this.fornecedor[0].cnpj);\n      }\n    });\n    this.formulario_produto = new FormGroup({\n      fornecedor: new FormControl(null),\n      nome: new FormControl(null),\n      descricao: new FormControl(null),\n      valor: new FormControl(null)\n    });\n  }\n  cadastrarProduto() {\n    const produto = this.formulario_produto.value;\n    this.produtoService.cadastrar(produto).subscribe(result => {\n      alert('Produto inserido com sucesso.');\n      this.router.navigate([\"/home\"]);\n    }, error => {\n      console.error('Erro ao cadastrar o produto:', error);\n      // Adicione tratamento de erro adequado conforme necessário\n    });\n  }\n};\n\nProdutosComponent = __decorate([Component({\n  selector: 'app-produtos',\n  templateUrl: \"./produtos.component.html\",\n  styleUrls: ['./produtos.component.css']\n})], ProdutosComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","ProdutosComponent","constructor","produtoService","router","fornecedorService","tituloFormulario","ngOnInit","listar","subscribe","fornecedor","length","formulario_produto","get","setValue","cnpj","nome","descricao","valor","cadastrarProduto","produto","value","cadastrar","result","alert","navigate","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\produtos\\produtos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ProdutosService } from 'src/app/Servico/ProdutoServico/produtos.service';\nimport { Produto } from 'src/app/Model/Produto';\nimport { Router } from '@angular/router';\nimport { Fornecedor } from 'src/app/Model/Fornecedor';\nimport { FornecedoresService } from 'src/app/Servico/FornecedorServico/fornecedores.service';\n\n@Component({\n  selector: 'app-produtos',\n  templateUrl: \"./produtos.component.html\",\n  styleUrls: ['./produtos.component.css']\n})\nexport class ProdutosComponent implements OnInit {\n  formulario_produto: any;\n  tituloFormulario: string = '';  \n  fornecedor: Array<Fornecedor> | undefined;\n\n  constructor(private produtoService : ProdutosService,\n     private router : Router,\n     private fornecedorService: FornecedoresService) { }\n\n  ngOnInit(): void {\n  this.tituloFormulario = 'Novo Produto';\n  this.fornecedorService.listar().subscribe(fornecedor => {\n    this.fornecedor = fornecedor;\n    if (this.fornecedor && this.fornecedor.length > 0) {\n      this.formulario_produto.get('fornecedor')?.setValue(this.fornecedor[0].cnpj);\n    }\n  });\n  this.formulario_produto= new FormGroup({\n  fornecedor: new FormControl(null),\n  nome: new FormControl(null),\n  descricao: new FormControl(null),\n  valor: new FormControl(null)\n  })\n  }\n\n  cadastrarProduto(): void {\n  const produto : Produto = this.formulario_produto.value;\n  this.produtoService.cadastrar(produto).subscribe(\n    result => {\n      alert('Produto inserido com sucesso.');\n      this.router.navigate([\"/home\"]);\n    },\n    error => {\n      console.error('Erro ao cadastrar o produto:', error);\n      // Adicione tratamento de erro adequado conforme necessário\n  })\n  }\n  }\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAYhD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,cAAgC,EACzCC,MAAe,EACfC,iBAAsC;IAF7B,KAAAF,cAAc,GAAdA,cAAc;IACvB,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAL5B,KAAAC,gBAAgB,GAAW,EAAE;EAKwB;EAErDC,QAAQA,CAAA;IACR,IAAI,CAACD,gBAAgB,GAAG,cAAc;IACtC,IAAI,CAACD,iBAAiB,CAACG,MAAM,EAAE,CAACC,SAAS,CAACC,UAAU,IAAG;MACrD,IAAI,CAACA,UAAU,GAAGA,UAAU;MAC5B,IAAI,IAAI,CAACA,UAAU,IAAI,IAAI,CAACA,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QACjD,IAAI,CAACC,kBAAkB,CAACC,GAAG,CAAC,YAAY,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC,CAACK,IAAI,CAAC;;IAEhF,CAAC,CAAC;IACF,IAAI,CAACH,kBAAkB,GAAE,IAAIZ,SAAS,CAAC;MACvCU,UAAU,EAAE,IAAIX,WAAW,CAAC,IAAI,CAAC;MACjCiB,IAAI,EAAE,IAAIjB,WAAW,CAAC,IAAI,CAAC;MAC3BkB,SAAS,EAAE,IAAIlB,WAAW,CAAC,IAAI,CAAC;MAChCmB,KAAK,EAAE,IAAInB,WAAW,CAAC,IAAI;KAC1B,CAAC;EACF;EAEAoB,gBAAgBA,CAAA;IAChB,MAAMC,OAAO,GAAa,IAAI,CAACR,kBAAkB,CAACS,KAAK;IACvD,IAAI,CAAClB,cAAc,CAACmB,SAAS,CAACF,OAAO,CAAC,CAACX,SAAS,CAC9Cc,MAAM,IAAG;MACPC,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACpB,MAAM,CAACqB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,EACDC,KAAK,IAAG;MACNC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD;IACJ,CAAC,CAAC;EACF;CACC;;AArCUzB,iBAAiB,GAAA2B,UAAA,EAL7B9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW9B,iBAAiB,CAqC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}