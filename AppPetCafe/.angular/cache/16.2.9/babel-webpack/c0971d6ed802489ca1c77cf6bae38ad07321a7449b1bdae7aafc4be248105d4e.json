{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ProdutosService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/Produto';\n  }\n  listar() {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get(url);\n  }\n  alterar(produto) {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put(url, produto, httpOptions);\n  }\n  excluir(codigo) {\n    const url = `${this.apiUrl}/buscar/${codigo}`;\n    return this.http.delete(url, httpOptions);\n  }\n  static #_ = this.ɵfac = function ProdutosService_Factory(t) {\n    return new (t || ProdutosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProdutosService,\n    factory: ProdutosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","ProdutosService","constructor","http","apiUrl","listar","url","get","alterar","produto","put","excluir","codigo","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\_src\\PetCafe-main\\apppetcafe\\src\\app\\Servico\\ProdutoServico\\produtos.service.ts"],"sourcesContent":["import {\n  HttpClient,\n  HttpErrorResponse,\n  HttpHeaders,\n} from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable, of, throwError } from 'rxjs';\nimport { Produto } from 'src/app/Model/Produto';\nimport { catchError } from 'rxjs/operators';\nimport { tap } from 'rxjs/operators';\n\nconst httpOptions = {\n  headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class ProdutosService {\n  apiUrl = 'http://localhost:5000/Produto';\n\n  constructor(private http: HttpClient) {}\n  listar(): Observable<Produto[]> {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get<Produto[]>(url);\n  }\n\n  alterar(produto: Produto): Observable<any> {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put<Produto>(url, produto, httpOptions);\n  }\n  excluir(codigo: string): Observable<any> {\n    const url = `${this.apiUrl}/buscar/${codigo}`;\n    return this.http.delete<string>(url, httpOptions);\n  }\n}\n"],"mappings":"AAAA,SAGEA,WAAW,QACN,sBAAsB;;;AAO7B,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAE,cAAc,EAAE;EAAkB,CAAE;CAChE;AAKD,OAAM,MAAOG,eAAe;EAG1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAG,+BAA+B;EAED;EACvCC,MAAMA,CAAA;IACJ,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACnC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC;EACtC;EAEAE,OAAOA,CAACC,OAAgB;IACtB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,UAAU;IACpC,OAAO,IAAI,CAACD,IAAI,CAACO,GAAG,CAAUJ,GAAG,EAAEG,OAAO,EAAEV,WAAW,CAAC;EAC1D;EACAY,OAAOA,CAACC,MAAc;IACpB,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWQ,MAAM,EAAE;IAC7C,OAAO,IAAI,CAACT,IAAI,CAACU,MAAM,CAASP,GAAG,EAAEP,WAAW,CAAC;EACnD;EAAC,QAAAe,CAAA,G;qBAhBUb,eAAe,EAAAc,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAflB,eAAe;IAAAmB,OAAA,EAAfnB,eAAe,CAAAoB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}