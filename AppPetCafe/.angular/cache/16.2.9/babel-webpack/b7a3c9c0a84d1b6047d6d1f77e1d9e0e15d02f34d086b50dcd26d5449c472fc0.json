{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nexport let ListaAnimaisComponent = class ListaAnimaisComponent {\n  constructor(animaisService, router, modalService) {\n    this.animaisService = animaisService;\n    this.router = router;\n    this.modalService = modalService;\n    this.tituloFormulario = '';\n    this.animais = [];\n  }\n  ngOnInit() {\n    this.obterAnimais();\n  }\n  obterAnimais() {\n    this.animaisService.listar().subscribe(animais => {\n      this.animais = animais;\n    }, error => {\n      console.error('Erro ao obter animal', error);\n    });\n  }\n};\nListaAnimaisComponent = __decorate([Component({\n  selector: 'app-lista-animais',\n  templateUrl: './lista-animais.component.html',\n  styleUrls: ['./lista-animais.component.css']\n})], ListaAnimaisComponent);","map":{"version":3,"names":["Component","ListaAnimaisComponent","constructor","animaisService","router","modalService","tituloFormulario","animais","ngOnInit","obterAnimais","listar","subscribe","error","console","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Eduardo\\Documents\\GitHub\\PetCafe\\apppetcafe\\src\\app\\components\\lista-animais\\lista-animais.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Animal } from 'src/app/Model/Animal';\nimport { AnimaisService } from 'src/app/Servico/AnimalServico/animais.service';\n\n@Component({\n  selector: 'app-lista-animais',\n  templateUrl: './lista-animais.component.html',\n  styleUrls: ['./lista-animais.component.css']\n})\nexport class ListaAnimaisComponent implements OnInit {\n\n  formulario: any;\n  tituloFormulario: string = '';\n  animais: Animal[] = [];\n  modalRef!: BsModalRef;\n\n  constructor(\n    private animaisService: AnimaisService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.obterAnimais();\n  }\n\n  obterAnimais\n  (): void {\n    this.animaisService.listar().subscribe(\n      (animais) => {\n        this.animais = animais;\n      },\n      (error) => {\n        console.error('Erro ao obter animal', error);\n      }\n    );\n  }\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAW1C,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAOhCC,YACUC,cAA8B,EAC9BC,MAAc,EACdC,YAA4B;IAF5B,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IAPtB,KAAAC,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,OAAO,GAAa,EAAE;EAOnB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IAEV,IAAI,CAACN,cAAc,CAACO,MAAM,EAAE,CAACC,SAAS,CACnCJ,OAAO,IAAI;MACV,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,EACAK,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CACF;EACH;CAED;AA7BYX,qBAAqB,GAAAa,UAAA,EALjCd,SAAS,CAAC;EACTe,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACWhB,qBAAqB,CA6BjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}