{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EditadocaomodalComponent } from '../editadocaomodal/editadocaomodal.component';\nexport let ListaAdocoesComponent = class ListaAdocoesComponent {\n  constructor(adocoesService, router, modalService) {\n    this.adocoesService = adocoesService;\n    this.router = router;\n    this.modalService = modalService;\n    this.tituloFormulario = '';\n    this.adocoes = [];\n  }\n  ngOnInit() {\n    this.obterAdocoes();\n  }\n  obterAdocoes() {\n    this.adocoesService.listar().subscribe(adocoes => {\n      this.adocoes = adocoes;\n    }, error => {\n      console.error('Erro ao obter adoção', error);\n    });\n  }\n  removerAdocao(codigo) {\n    this.adocoesService.excluir(codigo).subscribe(() => {\n      console.log('Adoção removido com sucesso!');\n      this.obterAdocoes();\n    }, error => {\n      console.error('Erro ao remover registro', error);\n    });\n  }\n  abrirModalEditAdocao(adocao) {\n    if (adocao) {\n      const initialState = {\n        adocao: {\n          ...adocao\n        }\n      };\n      this.modalRef = this.modalService.show(EditadocaomodalComponent, {\n        initialState\n      });\n      if (this.modalRef.content?.Atualizado) {\n        this.modalRef.content.Atualizado.subscribe(() => {\n          this.obterAdocoes();\n          this.modalRef.hide();\n        });\n      }\n    }\n  }\n  formatarCpf(cpf) {\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n};\nListaAdocoesComponent = __decorate([Component({\n  selector: 'app-lista-adocoes',\n  templateUrl: './lista-adocoes.component.html',\n  styleUrls: ['./lista-adocoes.component.css']\n})], ListaAdocoesComponent);","map":{"version":3,"names":["Component","EditadocaomodalComponent","ListaAdocoesComponent","constructor","adocoesService","router","modalService","tituloFormulario","adocoes","ngOnInit","obterAdocoes","listar","subscribe","error","console","removerAdocao","codigo","excluir","log","abrirModalEditAdocao","adocao","initialState","modalRef","show","content","Atualizado","hide","formatarCpf","cpf","replace","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Eduardo\\Documents\\GitHub\\PetCafe\\apppetcafe\\src\\app\\components\\lista-adocoes\\lista-adocoes.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Adocao } from 'src/app/Model/Adocao'\nimport { AdocoesService } from 'src/app/Servico/AdocaoServico/adocoes.service'; \nimport { EditadocaomodalComponent } from '../editadocaomodal/editadocaomodal.component';\n\n\n@Component({\n  selector: 'app-lista-adocoes',\n  templateUrl: './lista-adocoes.component.html',\n  styleUrls: ['./lista-adocoes.component.css']\n})\nexport class ListaAdocoesComponent {\n\n  formulario: any;\n  tituloFormulario: string = '';\n  adocoes: Adocao[] = [];\n  modalRef!: BsModalRef;\n\n  constructor(\n    private adocoesService: AdocoesService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.obterAdocoes();\n  }\n\n  obterAdocoes(): void {\n    this.adocoesService.listar().subscribe(\n      (adocoes) => {\n        this.adocoes = adocoes;\n      },\n      (error) => {\n        console.error('Erro ao obter adoção', error);\n        \n      }\n    );\n  }\n\n  removerAdocao(codigo: number): void {\n    this.adocoesService.excluir(codigo).subscribe(\n      () => {\n        console.log('Adoção removido com sucesso!');\n        this.obterAdocoes();\n      },\n      (error) => {\n        console.error('Erro ao remover registro', error);\n      }\n    );\n  }\n\n  abrirModalEditAdocao(adocao: Adocao): void {\n    if (adocao) {\n      const initialState = { adocao: { ...adocao } };\n\n      this.modalRef = this.modalService.show(EditadocaomodalComponent, {\n        initialState,\n      });\n\n      if (this.modalRef.content?.Atualizado) {\n        this.modalRef.content.Atualizado.subscribe(() => {\n          this.obterAdocoes();\n\n          this.modalRef.hide();\n        });\n      }\n    }\n  }\n\n  formatarCpf(cpf: string): string {\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n\n\n\n\n\n\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAKjD,SAASC,wBAAwB,QAAQ,8CAA8C;AAQhF,WAAMC,qBAAqB,GAA3B,MAAMA,qBAAqB;EAOhCC,YACUC,cAA8B,EAC9BC,MAAc,EACdC,YAA4B;IAF5B,KAAAF,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IAPtB,KAAAC,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,OAAO,GAAa,EAAE;EAOnB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,YAAY,EAAE;EACrB;EAEAA,YAAYA,CAAA;IACV,IAAI,CAACN,cAAc,CAACO,MAAM,EAAE,CAACC,SAAS,CACnCJ,OAAO,IAAI;MACV,IAAI,CAACA,OAAO,GAAGA,OAAO;IACxB,CAAC,EACAK,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAE9C,CAAC,CACF;EACH;EAEAE,aAAaA,CAACC,MAAc;IAC1B,IAAI,CAACZ,cAAc,CAACa,OAAO,CAACD,MAAM,CAAC,CAACJ,SAAS,CAC3C,MAAK;MACHE,OAAO,CAACI,GAAG,CAAC,8BAA8B,CAAC;MAC3C,IAAI,CAACR,YAAY,EAAE;IACrB,CAAC,EACAG,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAClD,CAAC,CACF;EACH;EAEAM,oBAAoBA,CAACC,MAAc;IACjC,IAAIA,MAAM,EAAE;MACV,MAAMC,YAAY,GAAG;QAAED,MAAM,EAAE;UAAE,GAAGA;QAAM;MAAE,CAAE;MAE9C,IAAI,CAACE,QAAQ,GAAG,IAAI,CAAChB,YAAY,CAACiB,IAAI,CAACtB,wBAAwB,EAAE;QAC/DoB;OACD,CAAC;MAEF,IAAI,IAAI,CAACC,QAAQ,CAACE,OAAO,EAAEC,UAAU,EAAE;QACrC,IAAI,CAACH,QAAQ,CAACE,OAAO,CAACC,UAAU,CAACb,SAAS,CAAC,MAAK;UAC9C,IAAI,CAACF,YAAY,EAAE;UAEnB,IAAI,CAACY,QAAQ,CAACI,IAAI,EAAE;QACtB,CAAC,CAAC;;;EAGR;EAEAC,WAAWA,CAACC,GAAW;IACrB,OAAOA,GAAG,CAACC,OAAO,CAAC,8BAA8B,EAAE,aAAa,CAAC;EACnE;CAOD;AApEY3B,qBAAqB,GAAA4B,UAAA,EALjC9B,SAAS,CAAC;EACT+B,QAAQ,EAAE,mBAAmB;EAC7BC,WAAW,EAAE,gCAAgC;EAC7CC,SAAS,EAAE,CAAC,+BAA+B;CAC5C,CAAC,C,EACW/B,qBAAqB,CAoEjC"},"metadata":{},"sourceType":"module","externalDependencies":[]}