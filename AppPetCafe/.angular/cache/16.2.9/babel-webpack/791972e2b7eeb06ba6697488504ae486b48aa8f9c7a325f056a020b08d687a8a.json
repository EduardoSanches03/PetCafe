{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let ProdutosComponent = class ProdutosComponent {\n  constructor(formBuilder, fornecedorService // Injete o serviço no construtor\n  ) {\n    this.formBuilder = formBuilder;\n    this.fornecedorService = fornecedorService;\n    this.fornecedores = [];\n  }\n  ngOnInit() {\n    this.formulario_produto = this.formBuilder.group({\n      fornecedor: ['', Validators.required],\n      nome: ['', Validators.required],\n      descricao: ['', Validators.required],\n      valor: ['', Validators.required]\n    });\n    this.obterFornecedores(); // Chame o método para obter fornecedores ao inicializar o componente\n  }\n\n  obterFornecedores() {\n    this.fornecedorService.obterFornecedores().subscribe(fornecedores => {\n      this.fornecedores = fornecedores;\n    }, error => {\n      console.error('Erro ao obter fornecedores:', error);\n      // Lide com o erro de acordo com a sua necessidade\n    });\n  }\n\n  enviarFormulario() {\n    if (this.formulario_produto.valid) {\n      const produto = this.formulario_produto.value;\n      console.log(produto);\n      // Adicione aqui a lógica para enviar o produto para o servidor, por exemplo, por meio de um serviço\n    }\n  }\n};\n\nProdutosComponent = __decorate([Component({\n  selector: 'app-produtos',\n  templateUrl: './produtos.component.html',\n  styleUrls: ['./produtos.component.css']\n})], ProdutosComponent);","map":{"version":3,"names":["Component","Validators","ProdutosComponent","constructor","formBuilder","fornecedorService","fornecedores","ngOnInit","formulario_produto","group","fornecedor","required","nome","descricao","valor","obterFornecedores","subscribe","error","console","enviarFormulario","valid","produto","value","log","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\produtos\\produtos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Fornecedor } from 'src/app/Model/Fornecedor'; \nimport { Produto } from 'src/app/Model/Produto'; \nimport { FornecedorService } from 'caminho/do/seu/fornecedor.service'; // Importe o serviço\n\n@Component({\n  selector: 'app-produtos',\n  templateUrl: './produtos.component.html',\n  styleUrls: ['./produtos.component.css'],\n})\nexport class ProdutosComponent implements OnInit {\n  formulario_produto: FormGroup;\n  fornecedores: Fornecedor[] = [];\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private fornecedorService: FornecedorService // Injete o serviço no construtor\n  ) {}\n\n  ngOnInit(): void {\n    this.formulario_produto = this.formBuilder.group({\n      fornecedor: ['', Validators.required],\n      nome: ['', Validators.required],\n      descricao: ['', Validators.required],\n      valor: ['', Validators.required],\n    });\n\n    this.obterFornecedores(); // Chame o método para obter fornecedores ao inicializar o componente\n  }\n\n  obterFornecedores(): void {\n    this.fornecedorService.obterFornecedores().subscribe(\n      (fornecedores) => {\n        this.fornecedores = fornecedores;\n      },\n      (error) => {\n        console.error('Erro ao obter fornecedores:', error);\n        // Lide com o erro de acordo com a sua necessidade\n      }\n    );\n  }\n\n  enviarFormulario(): void {\n    if (this.formulario_produto.valid) {\n      const produto: Produto = this.formulario_produto.value;\n      console.log(produto);\n      // Adicione aqui a lógica para enviar o produto para o servidor, por exemplo, por meio de um serviço\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAAiCC,UAAU,QAAQ,gBAAgB;AAU5D,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAI5BC,YACUC,WAAwB,EACxBC,iBAAoC,CAAC;EAAA,E;IADrC,KAAAD,WAAW,GAAXA,WAAW;IACX,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAJ3B,KAAAC,YAAY,GAAiB,EAAE;EAK5B;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,kBAAkB,GAAG,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;MAC/CC,UAAU,EAAE,CAAC,EAAE,EAAET,UAAU,CAACU,QAAQ,CAAC;MACrCC,IAAI,EAAE,CAAC,EAAE,EAAEX,UAAU,CAACU,QAAQ,CAAC;MAC/BE,SAAS,EAAE,CAAC,EAAE,EAAEZ,UAAU,CAACU,QAAQ,CAAC;MACpCG,KAAK,EAAE,CAAC,EAAE,EAAEb,UAAU,CAACU,QAAQ;KAChC,CAAC;IAEF,IAAI,CAACI,iBAAiB,EAAE,CAAC,CAAC;EAC5B;;EAEAA,iBAAiBA,CAAA;IACf,IAAI,CAACV,iBAAiB,CAACU,iBAAiB,EAAE,CAACC,SAAS,CACjDV,YAAY,IAAI;MACf,IAAI,CAACA,YAAY,GAAGA,YAAY;IAClC,CAAC,EACAW,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnD;IACF,CAAC,CACF;EACH;;EAEAE,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACX,kBAAkB,CAACY,KAAK,EAAE;MACjC,MAAMC,OAAO,GAAY,IAAI,CAACb,kBAAkB,CAACc,KAAK;MACtDJ,OAAO,CAACK,GAAG,CAACF,OAAO,CAAC;MACpB;;EAEJ;CACD;;AAvCYnB,iBAAiB,GAAAsB,UAAA,EAL7BxB,SAAS,CAAC;EACTyB,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWzB,iBAAiB,CAuC7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}