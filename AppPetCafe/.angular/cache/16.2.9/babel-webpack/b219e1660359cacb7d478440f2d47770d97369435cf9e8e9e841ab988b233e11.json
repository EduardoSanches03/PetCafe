{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport { Animal } from '../../Model/Animal';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class AnimaisService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/Animal';\n    Animal;\n  }\n  listar() {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get(url);\n  }\n  cadastrar(animal) {\n    const url = `${this.apiUrl}/cadastrar`;\n    return this.http.post(url, animal, httpOptions);\n  }\n  alterar(animal) {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put(url, animal, httpOptions);\n  }\n  excluir(id) {\n    const url = `${this.apiUrl}/excluir/${id}`;\n    return this.http.delete(url, httpOptions);\n  }\n  static #_ = this.ɵfac = function AnimaisService_Factory(t) {\n    return new (t || AnimaisService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AnimaisService,\n    factory: AnimaisService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","Animal","httpOptions","headers","AnimaisService","constructor","http","apiUrl","listar","url","get","cadastrar","animal","post","alterar","put","excluir","id","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Eduardo\\Documents\\GitHub\\PetCafe\\apppetcafe\\src\\app\\Servico\\AnimalServico\\animais.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Animal } from '../../Model/Animal';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AnimaisService {\n  apiUrl = 'http://localhost:5000/Animal';\n  constructor(private http: HttpClient) {\n    Animal;\n  }\n  listar(): Observable<Animal[]> {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get<Animal[]>(url);\n  }\n  cadastrar(animal: Animal): Observable<any> {\n    const url = `${this.apiUrl}/cadastrar`;\n    return this.http.post(url, animal, httpOptions);\n  }\n  alterar(animal: Animal): Observable<any> {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put<Animal>(url, animal, httpOptions);\n  }\n  excluir(id: number): Observable<any> {\n    const url = `${this.apiUrl}/excluir/${id}`;\n    return this.http.delete<string>(url, httpOptions);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;AAG9D,SAASC,MAAM,QAAQ,oBAAoB;;;AAE3C,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIH,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAKD,OAAM,MAAOI,cAAc;EAEzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,MAAM,GAAG,8BAA8B;IAErCN,MAAM;EACR;EACAO,MAAMA,CAAA;IACJ,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACnC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAWD,GAAG,CAAC;EACrC;EACAE,SAASA,CAACC,MAAc;IACtB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAY;IACtC,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAACJ,GAAG,EAAEG,MAAM,EAAEV,WAAW,CAAC;EACjD;EACAY,OAAOA,CAACF,MAAc;IACpB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,UAAU;IACpC,OAAO,IAAI,CAACD,IAAI,CAACS,GAAG,CAASN,GAAG,EAAEG,MAAM,EAAEV,WAAW,CAAC;EACxD;EACAc,OAAOA,CAACC,EAAU;IAChB,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAYU,EAAE,EAAE;IAC1C,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAAST,GAAG,EAAEP,WAAW,CAAC;EACnD;EAAC,QAAAiB,CAAA,G;qBApBUf,cAAc,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAdpB,cAAc;IAAAqB,OAAA,EAAdrB,cAAc,CAAAsB,IAAA;IAAAC,UAAA,EAFb;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}