{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ClientesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/Cliente';\n  }\n  listar() {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get(url);\n  }\n  cadastrar(cliente) {\n    const url = `${this.apiUrl}/cadastrar`;\n    return this.http.post(url, cliente, httpOptions);\n  }\n  alterar(cliente) {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put(url, cliente, httpOptions);\n  }\n  excluir(cpf) {\n    const url = `${this.apiUrl}/excluir/${cpf}`;\n    return this.http.delete(url, httpOptions);\n  }\n  static #_ = this.ɵfac = function ClientesService_Factory(t) {\n    return new (t || ClientesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientesService,\n    factory: ClientesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","ClientesService","constructor","http","apiUrl","listar","url","get","cadastrar","cliente","post","alterar","put","excluir","cpf","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Eduardo\\Documents\\GitHub\\PetCafe\\apppetcafe\\src\\app\\Servico\\ClienteServico\\clientes.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Cliente } from 'src/app/Model/Cliente';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json',\n  }),\n};\n@Injectable({\n  providedIn: 'root',\n})\nexport class ClientesService {\n  apiUrl = 'http://localhost:5000/Cliente';\n  constructor(private http: HttpClient) {}\n  listar(): Observable<Cliente[]> {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get<Cliente[]>(url);\n  }\n  cadastrar(cliente: Cliente): Observable<any> {\n    const url = `${this.apiUrl}/cadastrar`;\n    return this.http.post<Cliente>(url, cliente, httpOptions);\n  }\n  alterar(cliente: Cliente): Observable<any> {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put<Cliente>(url, cliente, httpOptions);\n  }\n  excluir(cpf: string): Observable<any> {\n    const url = `${this.apiUrl}/excluir/${cpf}`;\n    return this.http.delete<string>(url, httpOptions);\n  }\n}\n"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAID,OAAM,MAAOG,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,MAAM,GAAG,+BAA+B;EACD;EACvCC,MAAMA,CAAA;IACJ,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACnC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC;EACtC;EACAE,SAASA,CAACC,OAAgB;IACxB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAY;IACtC,OAAO,IAAI,CAACD,IAAI,CAACO,IAAI,CAAUJ,GAAG,EAAEG,OAAO,EAAEV,WAAW,CAAC;EAC3D;EACAY,OAAOA,CAACF,OAAgB;IACtB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,UAAU;IACpC,OAAO,IAAI,CAACD,IAAI,CAACS,GAAG,CAAUN,GAAG,EAAEG,OAAO,EAAEV,WAAW,CAAC;EAC1D;EACAc,OAAOA,CAACC,GAAW;IACjB,MAAMR,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAYU,GAAG,EAAE;IAC3C,OAAO,IAAI,CAACX,IAAI,CAACY,MAAM,CAAST,GAAG,EAAEP,WAAW,CAAC;EACnD;EAAC,QAAAiB,CAAA,G;qBAlBUf,eAAe,EAAAgB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfpB,eAAe;IAAAqB,OAAA,EAAfrB,eAAe,CAAAsB,IAAA;IAAAC,UAAA,EAFd;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}