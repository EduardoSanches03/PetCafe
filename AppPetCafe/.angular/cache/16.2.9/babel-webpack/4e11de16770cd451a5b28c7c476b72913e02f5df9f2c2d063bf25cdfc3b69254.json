{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nexport let ProdutosComponent = class ProdutosComponent {\n  constructor(produtoService, fornecedorService) {\n    this.produtoService = produtoService;\n    this.fornecedorService = fornecedorService;\n    this.tituloFormulario = '';\n  }\n  ngOnInit() {\n    this.tituloFormulario = 'Novo Produto ';\n    this.formulario_produto = new FormGroup({\n      cnpj: new FormControl(null),\n      nome: new FormControl(null),\n      descricao: new FormControl(null),\n      valor: new FormControl(null)\n    });\n    this.fornecedorService.listar().subscribe(fornecedores => {\n      this.fornecedor = fornecedores;\n      if (this.fornecedor && this.fornecedor.length > 0) {\n        this.formulario_produto.patchValue({\n          cnpj: this.fornecedor[0]?.cnpj\n          // Outros campos, se necessário\n        });\n      }\n    });\n  }\n\n  enviarFormulario() {\n    const produto = this.formulario_produto.value;\n    const observer = {\n      next(_result) {\n        alert('Produto salvo com sucesso.');\n      },\n      error(error) {\n        console.error('Erro ao salvar o produto:', error);\n        alert('Erro ao salvar o produto. Verifique o console para mais detalhes.');\n      },\n      complete() {}\n    };\n    this.produtoService.cadastrar(produto).subscribe(observer);\n  }\n};\nProdutosComponent = __decorate([Component({\n  selector: 'app-produtos',\n  templateUrl: \"./produtos.component.html\",\n  styleUrls: ['./produtos.component.css']\n})], ProdutosComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","ProdutosComponent","constructor","produtoService","fornecedorService","tituloFormulario","ngOnInit","formulario_produto","cnpj","nome","descricao","valor","listar","subscribe","fornecedores","fornecedor","length","patchValue","enviarFormulario","produto","value","observer","next","_result","alert","error","console","complete","cadastrar","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\produtos\\produtos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ProdutosService } from 'src/app/Servico/ProdutoServico/produtos.service';\nimport { Produto } from 'src/app/Model/Produto';\nimport { Router } from '@angular/router';\nimport { Fornecedor } from 'src/app/Model/Fornecedor';\nimport { FornecedoresService } from 'src/app/Servico/FornecedorServico/fornecedores.service';\nimport { Observer, Subscriber } from 'rxjs';\n\n@Component({\n  selector: 'app-produtos',\n  templateUrl: \"./produtos.component.html\",\n  styleUrls: ['./produtos.component.css']\n})\nexport class ProdutosComponent implements OnInit {\n\n\n  constructor(private produtoService : ProdutosService,private fornecedorService: FornecedoresService) { }\n  tituloFormulario: string = '';  \n  fornecedor: Array<Fornecedor> | undefined;\n  formulario_produto: any;\n\n  ngOnInit(): void {\n    this.tituloFormulario = 'Novo Produto ';\n    this.formulario_produto = new FormGroup({\n      cnpj: new FormControl(null),\n      nome: new FormControl(null),\n      descricao: new FormControl(null),\n      valor: new FormControl(null)\n    });\n  \n    this.fornecedorService.listar().subscribe(fornecedores => {\n      this.fornecedor = fornecedores;\n      if (this.fornecedor && this.fornecedor.length > 0) {\n        this.formulario_produto.patchValue({\n          cnpj: this.fornecedor[0]?.cnpj,\n          // Outros campos, se necessário\n        });\n      }\n    });\n  }\n  enviarFormulario(): void {\n    const produto: Produto = this.formulario_produto.value;\n  \n    const observer: Observer<Produto> = {\n      next(_result): void {\n        alert('Produto salvo com sucesso.');\n      },\n      error(error): void {\n        console.error('Erro ao salvar o produto:', error);\n        alert('Erro ao salvar o produto. Verifique o console para mais detalhes.');\n      },\n      complete(): void {}\n    };\n  \n    this.produtoService.cadastrar(produto).subscribe(observer);\n  }\n}"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAahD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YAAoBC,cAAgC,EAASC,iBAAsC;IAA/E,KAAAD,cAAc,GAAdA,cAAc;IAA2B,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAC9E,KAAAC,gBAAgB,GAAW,EAAE;EAD0E;EAKvGC,QAAQA,CAAA;IACN,IAAI,CAACD,gBAAgB,GAAG,eAAe;IACvC,IAAI,CAACE,kBAAkB,GAAG,IAAIP,SAAS,CAAC;MACtCQ,IAAI,EAAE,IAAIT,WAAW,CAAC,IAAI,CAAC;MAC3BU,IAAI,EAAE,IAAIV,WAAW,CAAC,IAAI,CAAC;MAC3BW,SAAS,EAAE,IAAIX,WAAW,CAAC,IAAI,CAAC;MAChCY,KAAK,EAAE,IAAIZ,WAAW,CAAC,IAAI;KAC5B,CAAC;IAEF,IAAI,CAACK,iBAAiB,CAACQ,MAAM,EAAE,CAACC,SAAS,CAACC,YAAY,IAAG;MACvD,IAAI,CAACC,UAAU,GAAGD,YAAY;MAC9B,IAAI,IAAI,CAACC,UAAU,IAAI,IAAI,CAACA,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QACjD,IAAI,CAACT,kBAAkB,CAACU,UAAU,CAAC;UACjCT,IAAI,EAAE,IAAI,CAACO,UAAU,CAAC,CAAC,CAAC,EAAEP;UAC1B;SACD,CAAC;;IAEN,CAAC,CAAC;EACJ;;EACAU,gBAAgBA,CAAA;IACd,MAAMC,OAAO,GAAY,IAAI,CAACZ,kBAAkB,CAACa,KAAK;IAEtD,MAAMC,QAAQ,GAAsB;MAClCC,IAAIA,CAACC,OAAO;QACVC,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC;MACDC,KAAKA,CAACA,KAAK;QACTC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;QACjDD,KAAK,CAAC,mEAAmE,CAAC;MAC5E,CAAC;MACDG,QAAQA,CAAA,GAAU;KACnB;IAED,IAAI,CAACxB,cAAc,CAACyB,SAAS,CAACT,OAAO,CAAC,CAACN,SAAS,CAACQ,QAAQ,CAAC;EAC5D;CACD;AA3CYpB,iBAAiB,GAAA4B,UAAA,EAL7B/B,SAAS,CAAC;EACTgC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACW/B,iBAAiB,CA2C7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}