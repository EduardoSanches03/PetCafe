{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { EditclienmodalComponent } from '../editclienmodal/editclienmodal.component';\nexport let ListaClientesComponent = class ListaClientesComponent {\n  constructor(clientesService, router, modalService) {\n    this.clientesService = clientesService;\n    this.router = router;\n    this.modalService = modalService;\n    this.tituloFormulario = '';\n    this.clientes = [];\n  }\n  ngOnInit() {\n    this.obterClientes();\n  }\n  enviarFormulario() {\n    const cliente = this.formulario.value;\n    this.clientesService.cadastrar(cliente).subscribe(result => {\n      alert('Cliente inserido com sucesso.');\n      this.router.navigate(['/home']);\n    });\n  }\n  obterClientes() {\n    this.clientesService.listar().subscribe(clientes => {\n      this.clientes = clientes;\n    }, error => {\n      console.error('Erro ao obter clientes', error);\n    });\n  }\n  removerCliente(cpf) {\n    this.clientesService.excluir(cpf).subscribe(() => {\n      console.log('Cliente removido com sucesso!');\n      this.obterClientes();\n    }, error => {\n      console.error('Erro ao remover cliente', error);\n    });\n  }\n  abrirModalEditCliente(cliente) {\n    if (cliente) {\n      const initialState = {\n        cliente: {\n          ...cliente\n        }\n      };\n      this.modalRef = this.modalService.show(EditclienmodalComponent, {\n        initialState\n      });\n      if (this.modalRef.content?.Atualizado) {\n        this.modalRef.content.Atualizado.subscribe(() => {\n          this.obterClientes();\n          this.modalRef.hide();\n        });\n      }\n    }\n  }\n  formatarCpf(cpf) {\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n};\nListaClientesComponent = __decorate([Component({\n  selector: 'app-clientes',\n  templateUrl: './lista-clientes.component.html',\n  styleUrls: ['./lista-clientes.component.css']\n})], ListaClientesComponent);","map":{"version":3,"names":["Component","EditclienmodalComponent","ListaClientesComponent","constructor","clientesService","router","modalService","tituloFormulario","clientes","ngOnInit","obterClientes","enviarFormulario","cliente","formulario","value","cadastrar","subscribe","result","alert","navigate","listar","error","console","removerCliente","cpf","excluir","log","abrirModalEditCliente","initialState","modalRef","show","content","Atualizado","hide","formatarCpf","replace","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Eduardo\\Documents\\GitHub\\PetCafe\\apppetcafe\\src\\app\\components\\lista-clientes\\lista-clientes.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClientesService } from 'src/app/Servico/ClienteServico/clientes.service';\nimport { Cliente } from 'src/app/Model/Cliente';\nimport { Router } from '@angular/router';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { EditclienmodalComponent } from '../editclienmodal/editclienmodal.component';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './lista-clientes.component.html',\n  styleUrls: ['./lista-clientes.component.css'],\n})\nexport class ListaClientesComponent implements OnInit {\n  formulario: any;\n  tituloFormulario: string = '';\n  clientes: Cliente[] = [];\n  modalRef!: BsModalRef;\n\n  constructor(\n    private clientesService: ClientesService,\n    private router: Router,\n    private modalService: BsModalService\n  ) {}\n\n  ngOnInit(): void {\n    this.obterClientes();\n  }\n\n  enviarFormulario(): void {\n    const cliente: Cliente = this.formulario.value;\n    this.clientesService.cadastrar(cliente).subscribe((result) => {\n      alert('Cliente inserido com sucesso.');\n      this.router.navigate(['/home']);\n    });\n  }\n  obterClientes(): void {\n    this.clientesService.listar().subscribe(\n      (clientes) => {\n        this.clientes = clientes;\n      },\n      (error) => {\n        console.error('Erro ao obter clientes', error);\n      }\n    );\n  }\n  removerCliente(cpf: string): void {\n    this.clientesService.excluir(cpf).subscribe(\n      () => {\n        console.log('Cliente removido com sucesso!');\n        this.obterClientes();\n      },\n      (error) => {\n        console.error('Erro ao remover cliente', error);\n      }\n    );\n  }\n\n  abrirModalEditCliente(cliente: Cliente): void {\n    if (cliente) {\n      const initialState = { cliente: { ...cliente } };\n\n      this.modalRef = this.modalService.show(EditclienmodalComponent, {\n        initialState,\n      });\n\n      if (this.modalRef.content?.Atualizado) {\n        this.modalRef.content.Atualizado.subscribe(() => {\n          this.obterClientes();\n\n          this.modalRef.hide();\n        });\n      }\n    }\n  }\n  formatarCpf(cpf: string): string {\n    return cpf.replace(/(\\d{3})(\\d{3})(\\d{3})(\\d{2})/, '$1.$2.$3-$4');\n  }\n}\n  "],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AAMjD,SAASC,uBAAuB,QAAQ,4CAA4C;AAO7E,WAAMC,sBAAsB,GAA5B,MAAMA,sBAAsB;EAMjCC,YACUC,eAAgC,EAChCC,MAAc,EACdC,YAA4B;IAF5B,KAAAF,eAAe,GAAfA,eAAe;IACf,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,YAAY,GAAZA,YAAY;IAPtB,KAAAC,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,QAAQ,GAAc,EAAE;EAOrB;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACC,aAAa,EAAE;EACtB;EAEAC,gBAAgBA,CAAA;IACd,MAAMC,OAAO,GAAY,IAAI,CAACC,UAAU,CAACC,KAAK;IAC9C,IAAI,CAACV,eAAe,CAACW,SAAS,CAACH,OAAO,CAAC,CAACI,SAAS,CAAEC,MAAM,IAAI;MAC3DC,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC;EACJ;EACAT,aAAaA,CAAA;IACX,IAAI,CAACN,eAAe,CAACgB,MAAM,EAAE,CAACJ,SAAS,CACpCR,QAAQ,IAAI;MACX,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,EACAa,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAChD,CAAC,CACF;EACH;EACAE,cAAcA,CAACC,GAAW;IACxB,IAAI,CAACpB,eAAe,CAACqB,OAAO,CAACD,GAAG,CAAC,CAACR,SAAS,CACzC,MAAK;MACHM,OAAO,CAACI,GAAG,CAAC,+BAA+B,CAAC;MAC5C,IAAI,CAAChB,aAAa,EAAE;IACtB,CAAC,EACAW,KAAK,IAAI;MACRC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;IACjD,CAAC,CACF;EACH;EAEAM,qBAAqBA,CAACf,OAAgB;IACpC,IAAIA,OAAO,EAAE;MACX,MAAMgB,YAAY,GAAG;QAAEhB,OAAO,EAAE;UAAE,GAAGA;QAAO;MAAE,CAAE;MAEhD,IAAI,CAACiB,QAAQ,GAAG,IAAI,CAACvB,YAAY,CAACwB,IAAI,CAAC7B,uBAAuB,EAAE;QAC9D2B;OACD,CAAC;MAEF,IAAI,IAAI,CAACC,QAAQ,CAACE,OAAO,EAAEC,UAAU,EAAE;QACrC,IAAI,CAACH,QAAQ,CAACE,OAAO,CAACC,UAAU,CAAChB,SAAS,CAAC,MAAK;UAC9C,IAAI,CAACN,aAAa,EAAE;UAEpB,IAAI,CAACmB,QAAQ,CAACI,IAAI,EAAE;QACtB,CAAC,CAAC;;;EAGR;EACAC,WAAWA,CAACV,GAAW;IACrB,OAAOA,GAAG,CAACW,OAAO,CAAC,8BAA8B,EAAE,aAAa,CAAC;EACnE;CACD;AAjEYjC,sBAAsB,GAAAkC,UAAA,EALlCpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,iCAAiC;EAC9CC,SAAS,EAAE,CAAC,gCAAgC;CAC7C,CAAC,C,EACWrC,sBAAsB,CAiElC"},"metadata":{},"sourceType":"module","externalDependencies":[]}