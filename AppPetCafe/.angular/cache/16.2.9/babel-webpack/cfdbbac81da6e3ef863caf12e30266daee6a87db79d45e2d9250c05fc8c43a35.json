{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ClientesService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/Cliente';\n  }\n  listar() {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get(url);\n  }\n  buscar(cpf) {\n    const url = `${this.apiUrl}/buscar/${cpf}`;\n    return this.http.get(url);\n  }\n  cadastrar(cliente) {\n    const url = `${this.apiUrl}/cadastrar`;\n    return this.http.post(url, cliente, httpOptions);\n  }\n  alterar(cliente) {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put(url, cliente, httpOptions);\n  }\n  excluir(cpf) {\n    const url = `${this.apiUrl}/buscar/${cpf}`;\n    return this.http.delete(url, httpOptions);\n  }\n  static #_ = this.ɵfac = function ClientesService_Factory(t) {\n    return new (t || ClientesService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ClientesService,\n    factory: ClientesService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","ClientesService","constructor","http","apiUrl","listar","url","get","buscar","cpf","cadastrar","cliente","post","alterar","put","excluir","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\_src\\PetCafe-main\\apppetcafe\\src\\app\\Servico\\ClienteServico\\clientes.service.ts"],"sourcesContent":["\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Cliente } from 'src/app/Model/Cliente'; \n\nconst httpOptions = {\nheaders: new HttpHeaders({\n'Content-Type' : 'application/json'\n})\n}\n@Injectable({\nprovidedIn: 'root'\n})\nexport class ClientesService {\n  apiUrl = 'http://localhost:5000/Cliente';\n  constructor(private http: HttpClient) { }\n  listar(): Observable<Cliente[]> {\n  const url = `${this.apiUrl}/listar`;\n  return this.http.get<Cliente[]>(url);\n  }\n  buscar(cpf: string): Observable<Cliente> {\n  const url = `${this.apiUrl}/buscar/${cpf}`;\n  return this.http.get<Cliente>(url);\n  }\n  cadastrar(cliente: Cliente): Observable<any> {\n  const url = `${this.apiUrl}/cadastrar`;\n  return this.http.post<Cliente>(url, cliente, httpOptions);\n  }\n  alterar(cliente: Cliente): Observable<any> {\n  const url = `${this.apiUrl}/alterar`;\n  return this.http.put<Cliente>(url, cliente, httpOptions);\n  }\n  excluir(cpf: string): Observable<any> {\n  const url = `${this.apiUrl}/buscar/${cpf}`;\n  return this.http.delete<string>(url, httpOptions);\n  }\n  }"],"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,MAAMC,WAAW,GAAG;EACpBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACzB,cAAc,EAAG;GAChB;CACA;AAID,OAAM,MAAOG,eAAe;EAE1BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IADxB,KAAAC,MAAM,GAAG,+BAA+B;EACA;EACxCC,MAAMA,CAAA;IACN,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACnC,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC;EACpC;EACAE,MAAMA,CAACC,GAAW;IAClB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWK,GAAG,EAAE;IAC1C,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAUD,GAAG,CAAC;EAClC;EACAI,SAASA,CAACC,OAAgB;IAC1B,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAY;IACtC,OAAO,IAAI,CAACD,IAAI,CAACS,IAAI,CAAUN,GAAG,EAAEK,OAAO,EAAEZ,WAAW,CAAC;EACzD;EACAc,OAAOA,CAACF,OAAgB;IACxB,MAAML,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,UAAU;IACpC,OAAO,IAAI,CAACD,IAAI,CAACW,GAAG,CAAUR,GAAG,EAAEK,OAAO,EAAEZ,WAAW,CAAC;EACxD;EACAgB,OAAOA,CAACN,GAAW;IACnB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWK,GAAG,EAAE;IAC1C,OAAO,IAAI,CAACN,IAAI,CAACa,MAAM,CAASV,GAAG,EAAEP,WAAW,CAAC;EACjD;EAAC,QAAAkB,CAAA,G;qBAtBUhB,eAAe,EAAAiB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfrB,eAAe;IAAAsB,OAAA,EAAftB,eAAe,CAAAuB,IAAA;IAAAC,UAAA,EAFhB;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}