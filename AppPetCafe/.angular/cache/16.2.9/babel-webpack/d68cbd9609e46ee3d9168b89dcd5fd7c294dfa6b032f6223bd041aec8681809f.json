{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nexport let FornecedorComponent = class FornecedorComponent {\n  constructor(fornecedorService, router) {\n    this.fornecedorService = fornecedorService;\n    this.router = router;\n    this.tituloFormulario = '';\n  }\n  ngOnInit() {\n    this.tituloFormulario = 'Novo Fornecedor';\n    this.formularioFornecedor = new FormGroup({\n      cnpj: new FormControl(null),\n      nome: new FormControl(null)\n    });\n  }\n  salvarFornecedor() {\n    const fornecedor = this.formularioFornecedor.value;\n    this.fornecedorService.cadastrar(fornecedor).subscribe(result => {\n      alert('Fornecedor inserido com sucesso.');\n      this.router.navigate(['/home']);\n    });\n  }\n  formatarCnpj(event) {\n    // Remove todos os caracteres não numéricos\n    let cnpj = event.target.value.replace(/\\D/g, '');\n    // Limita a quantidade de caracteres\n    cnpj = cnpj.substring(0, 14);\n    // Adiciona um ponto a cada dois caracteres\n    cnpj = cnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\n    // Atualiza o valor no modelo\n    this.formularioFornecedor.get('cnpj').setValue(cnpj);\n  }\n};\nFornecedorComponent = __decorate([Component({\n  selector: 'app-fornecedores',\n  templateUrl: './fornecedores.component.html',\n  styleUrls: ['./fornecedores.component.css']\n})], FornecedorComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","FornecedorComponent","constructor","fornecedorService","router","tituloFormulario","ngOnInit","formularioFornecedor","cnpj","nome","salvarFornecedor","fornecedor","value","cadastrar","subscribe","result","alert","navigate","formatarCnpj","event","target","replace","substring","get","setValue","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Eduardo\\Documents\\GitHub\\PetCafe\\apppetcafe\\src\\app\\components\\fornecedores\\fornecedores.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { FornecedoresService } from 'src/app/Servico/FornecedorServico/fornecedores.service';\nimport { Fornecedor } from 'src/app/Model/Fornecedor';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-fornecedores',\n  templateUrl: './fornecedores.component.html',\n  styleUrls: ['./fornecedores.component.css'],\n})\nexport class FornecedorComponent implements OnInit {\n  formularioFornecedor: any;\n  tituloFormulario: string = '';\n  constructor(\n    private fornecedorService: FornecedoresService,\n    private router: Router\n  ) {}\n\n  ngOnInit(): void {\n    this.tituloFormulario = 'Novo Fornecedor';\n    this.formularioFornecedor = new FormGroup({\n      cnpj: new FormControl(null),\n      nome: new FormControl(null),\n    });\n  }\n\n  salvarFornecedor(): void {\n    const fornecedor: Fornecedor = this.formularioFornecedor.value;\n    this.fornecedorService.cadastrar(fornecedor).subscribe((result) => {\n      alert('Fornecedor inserido com sucesso.');\n      this.router.navigate(['/home']);\n    });\n  }\n\n  formatarCnpj(event: any): void {\n    // Remove todos os caracteres não numéricos\n    let cnpj = event.target.value.replace(/\\D/g, '');\n\n    // Limita a quantidade de caracteres\n    cnpj = cnpj.substring(0, 14);\n\n    // Adiciona um ponto a cada dois caracteres\n    cnpj = cnpj.replace(/(\\d{2})(\\d{3})(\\d{3})(\\d{4})(\\d{2})/, '$1.$2.$3/$4-$5');\n\n    // Atualiza o valor no modelo\n    this.formularioFornecedor.get('cnpj').setValue(cnpj);\n}\n\n  \n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAUhD,WAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAG9BC,YACUC,iBAAsC,EACtCC,MAAc;IADd,KAAAD,iBAAiB,GAAjBA,iBAAiB;IACjB,KAAAC,MAAM,GAANA,MAAM;IAHhB,KAAAC,gBAAgB,GAAW,EAAE;EAI1B;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACD,gBAAgB,GAAG,iBAAiB;IACzC,IAAI,CAACE,oBAAoB,GAAG,IAAIP,SAAS,CAAC;MACxCQ,IAAI,EAAE,IAAIT,WAAW,CAAC,IAAI,CAAC;MAC3BU,IAAI,EAAE,IAAIV,WAAW,CAAC,IAAI;KAC3B,CAAC;EACJ;EAEAW,gBAAgBA,CAAA;IACd,MAAMC,UAAU,GAAe,IAAI,CAACJ,oBAAoB,CAACK,KAAK;IAC9D,IAAI,CAACT,iBAAiB,CAACU,SAAS,CAACF,UAAU,CAAC,CAACG,SAAS,CAAEC,MAAM,IAAI;MAChEC,KAAK,CAAC,kCAAkC,CAAC;MACzC,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC,CAAC;EACJ;EAEAC,YAAYA,CAACC,KAAU;IACrB;IACA,IAAIX,IAAI,GAAGW,KAAK,CAACC,MAAM,CAACR,KAAK,CAACS,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC;IAEhD;IACAb,IAAI,GAAGA,IAAI,CAACc,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC;IAE5B;IACAd,IAAI,GAAGA,IAAI,CAACa,OAAO,CAAC,qCAAqC,EAAE,gBAAgB,CAAC;IAE5E;IACA,IAAI,CAACd,oBAAoB,CAACgB,GAAG,CAAC,MAAM,CAAC,CAACC,QAAQ,CAAChB,IAAI,CAAC;EACxD;CAGC;AAvCYP,mBAAmB,GAAAwB,UAAA,EAL/B3B,SAAS,CAAC;EACT4B,QAAQ,EAAE,kBAAkB;EAC5BC,WAAW,EAAE,+BAA+B;EAC5CC,SAAS,EAAE,CAAC,8BAA8B;CAC3C,CAAC,C,EACW3B,mBAAmB,CAuC/B"},"metadata":{},"sourceType":"module","externalDependencies":[]}