{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nexport let ProdutosComponent = class ProdutosComponent {\n  constructor(fb, produtoService, fornecedorService) {\n    this.fb = fb;\n    this.produtoService = produtoService;\n    this.fornecedorService = fornecedorService;\n    this.tituloFormulario = '';\n  }\n  ngOnInit() {\n    this.tituloFormulario = 'Novo Modelo';\n    this.formulario_produto = this.fb.group({\n      codigo: [null],\n      nome: [null],\n      descricao: [null],\n      valor: [null],\n      fornecedor: [null, Validators.required] // Certifique-se de que o fornecedor seja do tipo Fornecedor\n    });\n\n    this.fornecedorService.listar().subscribe(fornecedores => {\n      this.fornecedores = fornecedores;\n      if (this.fornecedores && this.fornecedores.length > 0) {\n        this.formulario_produto.get('fornecedor')?.setValue(this.fornecedores[0]);\n      }\n    });\n  }\n  enviarFormulario() {\n    if (this.formulario_produto.valid) {\n      const produto = this.formulario_produto.value;\n      // Certifique-se de que o fornecedor esteja definido e tenha o campo cnpj\n      if (produto.fornecedor && produto.fornecedor.cnpj) {\n        const observer = {\n          next(_result) {\n            alert('Modelo salvo com sucesso.');\n          },\n          error(_error) {\n            alert('Erro ao salvar!');\n          },\n          complete() {}\n        };\n        if (produto.codigo && !isNaN(Number(produto.codigo))) {\n          this.produtoService.alterar(produto).subscribe(observer);\n        } else {\n          this.produtoService.cadastrarProduto(produto).subscribe(observer);\n        }\n      } else {\n        // Se o fornecedor ou o cnpj não estiverem definidos, trate o erro aqui\n        alert('Erro: O fornecedor ou o CNPJ não está definido.');\n      }\n    } else {\n      // Se o formulário não for válido, trate o erro aqui\n      alert('Erro: Formulário inválido. Preencha todos os campos obrigatórios.');\n    }\n  }\n};\nProdutosComponent = __decorate([Component({\n  selector: 'app-produtos',\n  templateUrl: './produtos.component.html',\n  styleUrls: ['./produtos.component.css']\n})], ProdutosComponent);","map":{"version":3,"names":["Component","Validators","ProdutosComponent","constructor","fb","produtoService","fornecedorService","tituloFormulario","ngOnInit","formulario_produto","group","codigo","nome","descricao","valor","fornecedor","required","listar","subscribe","fornecedores","length","get","setValue","enviarFormulario","valid","produto","value","cnpj","observer","next","_result","alert","error","_error","complete","isNaN","Number","alterar","cadastrarProduto","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\produtos\\produtos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { Fornecedor } from 'src/app/Model/Fornecedor';\nimport { Produto } from 'src/app/Model/Produto';\nimport { FornecedoresService } from 'src/app/Servico/FornecedorServico/fornecedores.service';\nimport { ProdutosService } from 'src/app/Servico/ProdutoServico/produtos.service';\nimport { Observer } from 'rxjs';\n\n@Component({\n  selector: 'app-produtos',\n  templateUrl: './produtos.component.html',\n  styleUrls: ['./produtos.component.css'],\n})\nexport class ProdutosComponent implements OnInit {\n  formulario_produto!: FormGroup;\n  tituloFormulario: string = '';\n  fornecedores: Array<Fornecedor> | undefined;\n\n  constructor(\n    private fb: FormBuilder,\n    private produtoService: ProdutosService,\n    private fornecedorService: FornecedoresService\n  ) {}\n\n  ngOnInit(): void {\n    this.tituloFormulario = 'Novo Modelo';\n    this.formulario_produto = this.fb.group({\n      codigo: [null],\n      nome: [null],\n      descricao: [null],\n      valor: [null],\n      fornecedor: [null, Validators.required],  // Certifique-se de que o fornecedor seja do tipo Fornecedor\n    });\n  \n    this.fornecedorService.listar().subscribe(fornecedores => {\n      this.fornecedores  = fornecedores ;\n      \n      if (this.fornecedores && this.fornecedores.length > 0) {\n        this.formulario_produto.get('fornecedor')?.setValue(this.fornecedores[0]);\n      }\n    });\n  }\n\n  enviarFormulario(): void {\n    if (this.formulario_produto.valid) {\n      const produto: Produto = this.formulario_produto.value;\n\n      // Certifique-se de que o fornecedor esteja definido e tenha o campo cnpj\n      if (produto.fornecedor && produto.fornecedor.cnpj) {\n        const observer: Observer<Produto> = {\n          next(_result): void {\n            alert('Modelo salvo com sucesso.');\n          },\n          error(_error): void {\n            alert('Erro ao salvar!');\n          },\n          complete(): void {\n          },\n        };\n    \n        if (produto.codigo && !isNaN(Number(produto.codigo))) {\n          this.produtoService.alterar(produto).subscribe(observer);\n        } else {\n          this.produtoService.cadastrarProduto(produto).subscribe(observer);\n        }\n      } else {\n        // Se o fornecedor ou o cnpj não estiverem definidos, trate o erro aqui\n        alert('Erro: O fornecedor ou o CNPJ não está definido.');\n      }\n    } else {\n      // Se o formulário não for válido, trate o erro aqui\n      alert('Erro: Formulário inválido. Preencha todos os campos obrigatórios.');\n    }\n  }\n}\n"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAA8CC,UAAU,QAAQ,gBAAgB;AAYzE,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YACUC,EAAe,EACfC,cAA+B,EAC/BC,iBAAsC;IAFtC,KAAAF,EAAE,GAAFA,EAAE;IACF,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAN3B,KAAAC,gBAAgB,GAAW,EAAE;EAO1B;EAEHC,QAAQA,CAAA;IACN,IAAI,CAACD,gBAAgB,GAAG,aAAa;IACrC,IAAI,CAACE,kBAAkB,GAAG,IAAI,CAACL,EAAE,CAACM,KAAK,CAAC;MACtCC,MAAM,EAAE,CAAC,IAAI,CAAC;MACdC,IAAI,EAAE,CAAC,IAAI,CAAC;MACZC,SAAS,EAAE,CAAC,IAAI,CAAC;MACjBC,KAAK,EAAE,CAAC,IAAI,CAAC;MACbC,UAAU,EAAE,CAAC,IAAI,EAAEd,UAAU,CAACe,QAAQ,CAAC,CAAG;KAC3C,CAAC;;IAEF,IAAI,CAACV,iBAAiB,CAACW,MAAM,EAAE,CAACC,SAAS,CAACC,YAAY,IAAG;MACvD,IAAI,CAACA,YAAY,GAAIA,YAAY;MAEjC,IAAI,IAAI,CAACA,YAAY,IAAI,IAAI,CAACA,YAAY,CAACC,MAAM,GAAG,CAAC,EAAE;QACrD,IAAI,CAACX,kBAAkB,CAACY,GAAG,CAAC,YAAY,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACH,YAAY,CAAC,CAAC,CAAC,CAAC;;IAE7E,CAAC,CAAC;EACJ;EAEAI,gBAAgBA,CAAA;IACd,IAAI,IAAI,CAACd,kBAAkB,CAACe,KAAK,EAAE;MACjC,MAAMC,OAAO,GAAY,IAAI,CAAChB,kBAAkB,CAACiB,KAAK;MAEtD;MACA,IAAID,OAAO,CAACV,UAAU,IAAIU,OAAO,CAACV,UAAU,CAACY,IAAI,EAAE;QACjD,MAAMC,QAAQ,GAAsB;UAClCC,IAAIA,CAACC,OAAO;YACVC,KAAK,CAAC,2BAA2B,CAAC;UACpC,CAAC;UACDC,KAAKA,CAACC,MAAM;YACVF,KAAK,CAAC,iBAAiB,CAAC;UAC1B,CAAC;UACDG,QAAQA,CAAA,GACR;SACD;QAED,IAAIT,OAAO,CAACd,MAAM,IAAI,CAACwB,KAAK,CAACC,MAAM,CAACX,OAAO,CAACd,MAAM,CAAC,CAAC,EAAE;UACpD,IAAI,CAACN,cAAc,CAACgC,OAAO,CAACZ,OAAO,CAAC,CAACP,SAAS,CAACU,QAAQ,CAAC;SACzD,MAAM;UACL,IAAI,CAACvB,cAAc,CAACiC,gBAAgB,CAACb,OAAO,CAAC,CAACP,SAAS,CAACU,QAAQ,CAAC;;OAEpE,MAAM;QACL;QACAG,KAAK,CAAC,iDAAiD,CAAC;;KAE3D,MAAM;MACL;MACAA,KAAK,CAAC,mEAAmE,CAAC;;EAE9E;CACD;AA7DY7B,iBAAiB,GAAAqC,UAAA,EAL7BvC,SAAS,CAAC;EACTwC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWxC,iBAAiB,CA6D7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}