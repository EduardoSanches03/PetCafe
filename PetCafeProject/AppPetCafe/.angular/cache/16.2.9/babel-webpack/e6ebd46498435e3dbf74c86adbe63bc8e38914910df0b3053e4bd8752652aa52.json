{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nexport let ProdutosComponent = class ProdutosComponent {\n  constructor(produtoService, fornecedorService) {\n    this.produtoService = produtoService;\n    this.fornecedorService = fornecedorService;\n    this.tituloFormulario = '';\n  }\n  ngOnInit() {\n    this.tituloFormulario = 'Novo Produto ';\n    this.fornecedorService.listar().subscribe(fornecedor => {\n      this.fornecedor = fornecedor;\n      if (this.fornecedor && this.fornecedor.length > 0) {\n        this.formulario_produto.get('cnpj')?.setValue(this.fornecedor[0]?.cnpj);\n      }\n    });\n    this.formulario_produto = new FormGroup({\n      cnpj: new FormControl(null),\n      nome: new FormControl(null),\n      descricao: new FormControl(null),\n      valor: new FormControl(null)\n    });\n  }\n  enviarFormulario() {\n    const produto = this.formulario_produto.value;\n    const observer = {\n      next(_result) {\n        alert('Modelo salvo com sucesso.');\n      },\n      error(_error) {\n        alert('Erro ao salvar!');\n      },\n      complete() {}\n    };\n    if (modelo.id && !isNaN(Number(modelo.id))) {\n      this.modelosService.alterar(modelo).subscribe(observer);\n    } else {\n      this.modelosService.cadastrar(modelo).subscribe(observer);\n    }\n  }\n};\nProdutosComponent = __decorate([Component({\n  selector: 'app-produtos',\n  templateUrl: \"./produtos.component.html\",\n  styleUrls: ['./produtos.component.css']\n})], ProdutosComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","ProdutosComponent","constructor","produtoService","fornecedorService","tituloFormulario","ngOnInit","listar","subscribe","fornecedor","length","formulario_produto","get","setValue","cnpj","nome","descricao","valor","enviarFormulario","produto","value","observer","next","_result","alert","error","_error","complete","modelo","id","isNaN","Number","modelosService","alterar","cadastrar","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\produtos\\produtos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ProdutosService } from 'src/app/Servico/ProdutoServico/produtos.service';\nimport { Produto } from 'src/app/Model/Produto';\nimport { Router } from '@angular/router';\nimport { Fornecedor } from 'src/app/Model/Fornecedor';\nimport { FornecedoresService } from 'src/app/Servico/FornecedorServico/fornecedores.service';\n\n@Component({\n  selector: 'app-produtos',\n  templateUrl: \"./produtos.component.html\",\n  styleUrls: ['./produtos.component.css']\n})\nexport class ProdutosComponent implements OnInit {\n  formulario_produto: any;\n  tituloFormulario: string = '';  \n  fornecedor: Array<Fornecedor> | undefined;\n\n  constructor(private produtoService : ProdutosService,private fornecedorService: FornecedoresService) { }\n  \n  ngOnInit(): void {\n    this.tituloFormulario = 'Novo Produto ';\n    this.fornecedorService.listar().subscribe(fornecedor => {\n      this.fornecedor = fornecedor;\n      if (this.fornecedor && this.fornecedor.length > 0) {\n        this.formulario_produto.get('cnpj')?.setValue(this.fornecedor[0]?.cnpj);\n      }\n    });\n    this.formulario_produto = new FormGroup({\n      cnpj: new FormControl(null),\n      nome: new FormControl(null),\n      descricao: new FormControl(null),\n      valor: new FormControl(null)\n    }\n    )}\n    \n    enviarFormulario(): void {\n      const produto: Produto = this.formulario_produto.value;\n      const observer: Observer<Modelo> = {\n        next(_result): void {\n          alert('Modelo salvo com sucesso.'\n          );\n        },error(_error): void {alert('Erro ao salvar!');\n      },\n      complete(): void {},\n    };\n    if (modelo.id && !isNaN(Number(modelo.id)))\n     {this.modelosService.alterar(modelo).subscribe(observer);\n    } else {this.modelosService.cadastrar(modelo).subscribe(observer);\n    }}\n  }"],"mappings":";AAAA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;AAYhD,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAK5BC,YAAoBC,cAAgC,EAASC,iBAAsC;IAA/E,KAAAD,cAAc,GAAdA,cAAc;IAA2B,KAAAC,iBAAiB,GAAjBA,iBAAiB;IAH9E,KAAAC,gBAAgB,GAAW,EAAE;EAG0E;EAEvGC,QAAQA,CAAA;IACN,IAAI,CAACD,gBAAgB,GAAG,eAAe;IACvC,IAAI,CAACD,iBAAiB,CAACG,MAAM,EAAE,CAACC,SAAS,CAACC,UAAU,IAAG;MACrD,IAAI,CAACA,UAAU,GAAGA,UAAU;MAC5B,IAAI,IAAI,CAACA,UAAU,IAAI,IAAI,CAACA,UAAU,CAACC,MAAM,GAAG,CAAC,EAAE;QACjD,IAAI,CAACC,kBAAkB,CAACC,GAAG,CAAC,MAAM,CAAC,EAAEC,QAAQ,CAAC,IAAI,CAACJ,UAAU,CAAC,CAAC,CAAC,EAAEK,IAAI,CAAC;;IAE3E,CAAC,CAAC;IACF,IAAI,CAACH,kBAAkB,GAAG,IAAIX,SAAS,CAAC;MACtCc,IAAI,EAAE,IAAIf,WAAW,CAAC,IAAI,CAAC;MAC3BgB,IAAI,EAAE,IAAIhB,WAAW,CAAC,IAAI,CAAC;MAC3BiB,SAAS,EAAE,IAAIjB,WAAW,CAAC,IAAI,CAAC;MAChCkB,KAAK,EAAE,IAAIlB,WAAW,CAAC,IAAI;KAC5B,CACA;EAAA;EAEDmB,gBAAgBA,CAAA;IACd,MAAMC,OAAO,GAAY,IAAI,CAACR,kBAAkB,CAACS,KAAK;IACtD,MAAMC,QAAQ,GAAqB;MACjCC,IAAIA,CAACC,OAAO;QACVC,KAAK,CAAC,2BAA2B,CAChC;MACH,CAAC;MAACC,KAAKA,CAACC,MAAM;QAASF,KAAK,CAAC,iBAAiB,CAAC;MACjD,CAAC;MACDG,QAAQA,CAAA,GAAU;KACnB;IACD,IAAIC,MAAM,CAACC,EAAE,IAAI,CAACC,KAAK,CAACC,MAAM,CAACH,MAAM,CAACC,EAAE,CAAC,CAAC,EACzC;MAAC,IAAI,CAACG,cAAc,CAACC,OAAO,CAACL,MAAM,CAAC,CAACpB,SAAS,CAACa,QAAQ,CAAC;KACxD,MAAM;MAAC,IAAI,CAACW,cAAc,CAACE,SAAS,CAACN,MAAM,CAAC,CAACpB,SAAS,CAACa,QAAQ,CAAC;;EAChE;CACF;AArCUpB,iBAAiB,GAAAkC,UAAA,EAL7BrC,SAAS,CAAC;EACTsC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWrC,iBAAiB,CAqC3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}