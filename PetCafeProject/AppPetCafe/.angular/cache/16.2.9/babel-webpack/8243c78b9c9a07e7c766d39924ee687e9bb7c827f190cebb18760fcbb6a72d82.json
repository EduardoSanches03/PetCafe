{"ast":null,"code":"import { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/clientes.service\";\nimport * as i2 from \"@angular/router\";\nexport class ListaClientesComponent {\n  constructor(clientesService, router) {\n    this.clientesService = clientesService;\n    this.router = router;\n    this.tituloFormulario = '';\n    this.clientes = [];\n  }\n  ngOnInit() {\n    this.tituloFormulario = 'Novo Cliente';\n    this.formulario = new FormGroup({\n      cpf: new FormControl(null),\n      nome: new FormControl(null),\n      email: new FormControl(null),\n      idade: new FormControl(null)\n    });\n  }\n  enviarFormulario() {\n    const cliente = this.formulario.value;\n    this.clientesService.cadastrar(cliente).subscribe(result => {\n      alert('Cliente inserido com sucesso.');\n      this.router.navigate([\"/home\"]);\n    });\n  }\n  obterClientes() {\n    this.clientesService.listar().subscribe(clientes => {\n      this.clientes = clientes;\n    });\n  }\n  static #_ = this.ɵfac = function ListaClientesComponent_Factory(t) {\n    return new (t || ListaClientesComponent)(i0.ɵɵdirectiveInject(i1.ClientesService), i0.ɵɵdirectiveInject(i2.Router));\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListaClientesComponent,\n    selectors: [[\"app-clientes\"]],\n    decls: 2,\n    vars: 0,\n    template: function ListaClientesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"lista-clientes works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}","map":{"version":3,"names":["FormControl","FormGroup","ListaClientesComponent","constructor","clientesService","router","tituloFormulario","clientes","ngOnInit","formulario","cpf","nome","email","idade","enviarFormulario","cliente","value","cadastrar","subscribe","result","alert","navigate","obterClientes","listar","_","i0","ɵɵdirectiveInject","i1","ClientesService","i2","Router","_2","selectors","decls","vars","template","ListaClientesComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\lista-clientes\\lista-clientes.component.ts","C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\lista-clientes\\lista-clientes.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClientesService } from 'src/app/clientes.service';\nimport { Cliente } from 'src/app/Cliente';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './lista-clientes.component.html',\n  styleUrls: ['./lista-clientes.component.css']\n})\nexport class ListaClientesComponent implements OnInit {\n  formulario: any;\n  tituloFormulario: string = '';\n  clientes: Cliente[]=[];\n  \n  constructor(private clientesService : ClientesService, private router : Router) { }\n\n  ngOnInit(): void {\n  this.tituloFormulario = 'Novo Cliente';\n  this.formulario = new FormGroup({\n  cpf: new FormControl(null),\n  nome: new FormControl(null),\n  email: new FormControl(null),\n  idade: new FormControl(null)\n  })\n  }\n\n  enviarFormulario(): void {\n  const cliente : Cliente = this.formulario.value;\n  this.clientesService.cadastrar(cliente).subscribe(result => {\n  alert('Cliente inserido com sucesso.');\n  this.router.navigate([\"/home\"]);\n  })\n  }\n\n  obterClientes(): void{\n    this.clientesService.listar().subscribe((clientes) =>{\n      this.clientes = clientes;\n    });\n\n  }\n  }\n","<p>lista-clientes works!</p>\n"],"mappings":"AACA,SAASA,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;;;AAUvD,OAAM,MAAOC,sBAAsB;EAKjCC,YAAoBC,eAAiC,EAAUC,MAAe;IAA1D,KAAAD,eAAe,GAAfA,eAAe;IAA4B,KAAAC,MAAM,GAANA,MAAM;IAHrE,KAAAC,gBAAgB,GAAW,EAAE;IAC7B,KAAAC,QAAQ,GAAY,EAAE;EAE4D;EAElFC,QAAQA,CAAA;IACR,IAAI,CAACF,gBAAgB,GAAG,cAAc;IACtC,IAAI,CAACG,UAAU,GAAG,IAAIR,SAAS,CAAC;MAChCS,GAAG,EAAE,IAAIV,WAAW,CAAC,IAAI,CAAC;MAC1BW,IAAI,EAAE,IAAIX,WAAW,CAAC,IAAI,CAAC;MAC3BY,KAAK,EAAE,IAAIZ,WAAW,CAAC,IAAI,CAAC;MAC5Ba,KAAK,EAAE,IAAIb,WAAW,CAAC,IAAI;KAC1B,CAAC;EACF;EAEAc,gBAAgBA,CAAA;IAChB,MAAMC,OAAO,GAAa,IAAI,CAACN,UAAU,CAACO,KAAK;IAC/C,IAAI,CAACZ,eAAe,CAACa,SAAS,CAACF,OAAO,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MAC3DC,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACf,MAAM,CAACgB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC,CAAC;EACF;EAEAC,aAAaA,CAAA;IACX,IAAI,CAAClB,eAAe,CAACmB,MAAM,EAAE,CAACL,SAAS,CAAEX,QAAQ,IAAI;MACnD,IAAI,CAACA,QAAQ,GAAGA,QAAQ;IAC1B,CAAC,CAAC;EAEJ;EAAC,QAAAiB,CAAA,G;qBA9BUtB,sBAAsB,EAAAuB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,eAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,MAAA;EAAA;EAAA,QAAAC,EAAA,G;UAAtB7B,sBAAsB;IAAA8B,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,gCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCXnCZ,EAAA,CAAAc,cAAA,QAAG;QAAAd,EAAA,CAAAe,MAAA,4BAAqB;QAAAf,EAAA,CAAAgB,YAAA,EAAI"},"metadata":{},"sourceType":"module","externalDependencies":[]}