{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ProdutosService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:5000/Produto';\n  }\n  listar() {\n    const url = `${this.apiUrl}/listar`;\n    return this.http.get(url);\n  }\n  buscar(codigo) {\n    const url = `${this.apiUrl}/buscar/${codigo}`;\n    return this.http.get(url);\n  }\n  cadastrar(codigoFornecedor, produto) {\n    const url = `${this.apiUrl}/cadastrar`;\n    // Adicione o código do fornecedor ao corpo da requisição\n    const body = {\n      codigoFornecedor: codigoFornecedor,\n      produto: produto\n    };\n    return this.http.post(url, body, httpOptions);\n  }\n  alterar(produto) {\n    const url = `${this.apiUrl}/alterar`;\n    return this.http.put(url, produto, httpOptions);\n  }\n  excluir(codigo) {\n    const url = `${this.apiUrl}/buscar/${codigo}`;\n    return this.http.delete(url, httpOptions);\n  }\n  static #_ = this.ɵfac = function ProdutosService_Factory(t) {\n    return new (t || ProdutosService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProdutosService,\n    factory: ProdutosService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpHeaders","httpOptions","headers","ProdutosService","constructor","http","apiUrl","listar","url","get","buscar","codigo","cadastrar","codigoFornecedor","produto","body","post","alterar","put","excluir","delete","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\ProdutoServico\\produtos.service.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { Produto } from '../Model/Produto';\n\nconst httpOptions = {headers: new HttpHeaders({'Content-Type' : 'application/json'}\n)}\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ProdutosService {\napiUrl = 'http://localhost:5000/Produto';\n\nconstructor(private http: HttpClient) { }\nlistar(): Observable<Produto[]> {const url = `${this.apiUrl}/listar`;\nreturn this.http.get<Produto[]>(url);\n}\nbuscar(codigo: string): Observable<Produto> {const url = `${this.apiUrl}/buscar/${codigo}`;\nreturn this.http.get<Produto>(url);\n}\ncadastrar(codigoFornecedor: string, produto: Produto): Observable<any> {\n    const url = `${this.apiUrl}/cadastrar`;\n    \n    // Adicione o código do fornecedor ao corpo da requisição\n    const body = {\n      codigoFornecedor: codigoFornecedor,\n      produto: produto\n    };\n\n    return this.http.post<any>(url, body, httpOptions);\n  }\n  \nalterar(produto: Produto): Observable<any> {const url = `${this.apiUrl}/alterar`;\nreturn this.http.put<Produto>(url, produto, httpOptions);\n}\nexcluir(codigo: string): Observable<any> {const url = `${this.apiUrl}/buscar/${codigo}`;\nreturn this.http.delete<string>(url, httpOptions);\n}}"],"mappings":"AAAA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAK9D,MAAMC,WAAW,GAAG;EAACC,OAAO,EAAE,IAAIF,WAAW,CAAC;IAAC,cAAc,EAAG;EAAkB,CAAC;AAClF,CAAC;AAMF,OAAM,MAAOG,eAAe;EAG5BC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFxB,KAAAC,MAAM,GAAG,+BAA+B;EAEA;EACxCC,MAAMA,CAAA;IAA2B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,SAAS;IACpE,OAAO,IAAI,CAACD,IAAI,CAACI,GAAG,CAAYD,GAAG,CAAC;EACpC;EACAE,MAAMA,CAACC,MAAc;IAAwB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWK,MAAM,EAAE;IAC1F,OAAO,IAAI,CAACN,IAAI,CAACI,GAAG,CAAUD,GAAG,CAAC;EAClC;EACAI,SAASA,CAACC,gBAAwB,EAAEC,OAAgB;IAChD,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,YAAY;IAEtC;IACA,MAAMS,IAAI,GAAG;MACXF,gBAAgB,EAAEA,gBAAgB;MAClCC,OAAO,EAAEA;KACV;IAED,OAAO,IAAI,CAACT,IAAI,CAACW,IAAI,CAAMR,GAAG,EAAEO,IAAI,EAAEd,WAAW,CAAC;EACpD;EAEFgB,OAAOA,CAACH,OAAgB;IAAoB,MAAMN,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,UAAU;IAChF,OAAO,IAAI,CAACD,IAAI,CAACa,GAAG,CAAUV,GAAG,EAAEM,OAAO,EAAEb,WAAW,CAAC;EACxD;EACAkB,OAAOA,CAACR,MAAc;IAAoB,MAAMH,GAAG,GAAG,GAAG,IAAI,CAACF,MAAM,WAAWK,MAAM,EAAE;IACvF,OAAO,IAAI,CAACN,IAAI,CAACe,MAAM,CAASZ,GAAG,EAAEP,WAAW,CAAC;EACjD;EAAC,QAAAoB,CAAA,G;qBA3BYlB,eAAe,EAAAmB,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;EAAA;EAAA,QAAAC,EAAA,G;WAAfvB,eAAe;IAAAwB,OAAA,EAAfxB,eAAe,CAAAyB,IAAA;IAAAC,UAAA,EAHZ;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}