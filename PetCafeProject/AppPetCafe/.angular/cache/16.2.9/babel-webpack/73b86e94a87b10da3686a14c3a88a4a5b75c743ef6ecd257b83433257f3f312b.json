{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\produtos\\produtos.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Fornecedor } from 'src/app/Model/Fornecedor'; \nimport { Produto } \n\n@Component({\n  selector: 'app-produtos',\n  templateUrl: './produtos.component.html',\n  styleUrls: ['./produtos.component.css']\n})\nexport class ProdutosComponent implements OnInit {\n  formularioProduto: FormGroup; // Renomeei para seguir a convenção camelCase\n  fornecedores: Fornecedor[] = []; // Certifique-se de inicializar ou obter os fornecedores de algum lugar\n\n  constructor(private formBuilder: FormBuilder) { }\n\n  ngOnInit(): void {\n    // Inicializar o formulário e adicionar validadores, se necessário\n    this.formularioProduto = this.formBuilder.group({\n      fornecedor: ['', Validators.required], // Adicione validadores conforme necessário\n      nome: ['', Validators.required],\n      descricao: ['', Validators.required],\n      valor: ['', Validators.required],\n    });\n  }\n\n  enviarFormulario(): void {\n    // Lógica para enviar o formulário\n    if (this.formularioProduto.valid) {\n      const produto: Produto = this.formularioProduto.value;\n      // Agora você tem o objeto 'produto' que contém a referência ao fornecedor selecionado\n      console.log(produto);\n      // Adicione aqui a lógica para enviar o produto para o servidor, por exemplo, por meio de um serviço\n    }\n  }\n}\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}