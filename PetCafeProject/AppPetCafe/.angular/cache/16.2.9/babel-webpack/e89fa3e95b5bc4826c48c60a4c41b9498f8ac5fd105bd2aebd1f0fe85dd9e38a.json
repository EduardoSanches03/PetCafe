{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nexport class ProdutosComponent {\n  static #_ = this.ɵfac = function ProdutosComponent_Factory(t) {\n    return new (t || ProdutosComponent)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProdutosComponent,\n    selectors: [[\"app-produtos\"]],\n    decls: 2,\n    vars: 0,\n    template: function ProdutosComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \"produtos works!\");\n        i0.ɵɵelementEnd();\n      }\n    },\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  });\n}\nexport let ClientesComponent = class ClientesComponent {\n  constructor(clientesService, router) {\n    this.clientesService = clientesService;\n    this.router = router;\n    this.tituloFormulario = '';\n  }\n  ngOnInit() {\n    this.tituloFormulario = 'Novo Cliente';\n    this.formulario = new FormGroup({\n      cpf: new FormControl(null),\n      nome: new FormControl(null),\n      email: new FormControl(null),\n      idade: new FormControl(null)\n    });\n  }\n  enviarFormulario() {\n    const cliente = this.formulario.value;\n    this.clientesService.cadastrar(cliente).subscribe(result => {\n      alert('Cliente inserido com sucesso.');\n      this.router.navigate([\"/home\"]);\n    });\n  }\n};\nClientesComponent = __decorate([Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})], ClientesComponent);","map":{"version":3,"names":["Component","FormControl","FormGroup","ProdutosComponent","_","_2","selectors","decls","vars","template","ProdutosComponent_Template","rf","ctx","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ClientesComponent","constructor","clientesService","router","tituloFormulario","ngOnInit","formulario","cpf","nome","email","idade","enviarFormulario","cliente","value","cadastrar","subscribe","result","alert","navigate","__decorate","selector","templateUrl","styleUrls"],"sources":["C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\produtos\\produtos.component.ts","C:\\Users\\Rafael\\Documents\\Faculdade\\Dev_SoftVisual\\MeuApp\\PetCafe\\AppPetCafe\\src\\app\\components\\produtos\\produtos.component.html"],"sourcesContent":["\n@Component({\n  selector: 'app-produtos',\n  templateUrl: './produtos.component.html',\n  styleUrls: ['./produtos.component.css']\n})\nexport class ProdutosComponent {\n\n}\nimport { Component, OnInit } from '@angular/core';\nimport { FormControl, FormGroup } from '@angular/forms';\nimport { ClientesService } from 'src/app/ClienteServico/clientes.service';\nimport { Cliente } from 'src/app/Model/Cliente';\nimport { Router } from '@angular/router';\n@Component({\n  selector: 'app-clientes',\n  templateUrl: './clientes.component.html',\n  styleUrls: ['./clientes.component.css']\n})\nexport class ClientesComponent implements OnInit {\n  formulario: any;\n  tituloFormulario: string = '';  \n  constructor(private clientesService : ClientesService, private router : Router) { }\n\n  ngOnInit(): void {\n  this.tituloFormulario = 'Novo Cliente';\n  this.formulario = new FormGroup({\n  cpf: new FormControl(null),\n  nome: new FormControl(null),\n  email: new FormControl(null),\n  idade: new FormControl(null)\n  })\n  }\n\n  enviarFormulario(): void {\n  const cliente : Cliente = this.formulario.value;\n  this.clientesService.cadastrar(cliente).subscribe(result => {\n  alert('Cliente inserido com sucesso.');\n  this.router.navigate([\"/home\"]);\n  })\n  }\n  }\n","<p>produtos works!</p>\n"],"mappings":";AASA,SAASA,SAAS,QAAgB,eAAe;AACjD,SAASC,WAAW,EAAEC,SAAS,QAAQ,gBAAgB;;AAJvD,OAAM,MAAOC,iBAAiB;EAAA,QAAAC,CAAA,G;qBAAjBD,iBAAiB;EAAA;EAAA,QAAAE,EAAA,G;UAAjBF,iBAAiB;IAAAG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCN9BE,EAAA,CAAAC,cAAA,QAAG;QAAAD,EAAA,CAAAE,MAAA,sBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAI;;;;;;ADmBf,WAAMC,iBAAiB,GAAvB,MAAMA,iBAAiB;EAG5BC,YAAoBC,eAAiC,EAAUC,MAAe;IAA1D,KAAAD,eAAe,GAAfA,eAAe;IAA4B,KAAAC,MAAM,GAANA,MAAM;IADrE,KAAAC,gBAAgB,GAAW,EAAE;EACqD;EAElFC,QAAQA,CAAA;IACR,IAAI,CAACD,gBAAgB,GAAG,cAAc;IACtC,IAAI,CAACE,UAAU,GAAG,IAAIrB,SAAS,CAAC;MAChCsB,GAAG,EAAE,IAAIvB,WAAW,CAAC,IAAI,CAAC;MAC1BwB,IAAI,EAAE,IAAIxB,WAAW,CAAC,IAAI,CAAC;MAC3ByB,KAAK,EAAE,IAAIzB,WAAW,CAAC,IAAI,CAAC;MAC5B0B,KAAK,EAAE,IAAI1B,WAAW,CAAC,IAAI;KAC1B,CAAC;EACF;EAEA2B,gBAAgBA,CAAA;IAChB,MAAMC,OAAO,GAAa,IAAI,CAACN,UAAU,CAACO,KAAK;IAC/C,IAAI,CAACX,eAAe,CAACY,SAAS,CAACF,OAAO,CAAC,CAACG,SAAS,CAACC,MAAM,IAAG;MAC3DC,KAAK,CAAC,+BAA+B,CAAC;MACtC,IAAI,CAACd,MAAM,CAACe,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;IAC/B,CAAC,CAAC;EACF;CACC;AAtBUlB,iBAAiB,GAAAmB,UAAA,EAL7BpC,SAAS,CAAC;EACTqC,QAAQ,EAAE,cAAc;EACxBC,WAAW,EAAE,2BAA2B;EACxCC,SAAS,EAAE,CAAC,0BAA0B;CACvC,CAAC,C,EACWtB,iBAAiB,CAsB3B"},"metadata":{},"sourceType":"module","externalDependencies":[]}