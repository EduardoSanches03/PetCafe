// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PetCafeProject.Data;

#nullable disable

namespace PetCafeProject.Migrations
{
    [DbContext(typeof(PetCafeDbContext))]
    [Migration("20231116193344_produtoalterado2")]
    partial class produtoalterado2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("PetCafeProject.Models.Adocao", b =>
                {
                    b.Property<int>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AnimalId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clientecpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Codigo");

                    b.HasIndex("AnimalId");

                    b.HasIndex("Clientecpf");

                    b.ToTable("Adocao");
                });

            modelBuilder.Entity("PetCafeProject.Models.Animal", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Especie")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Animal");
                });

            modelBuilder.Entity("PetCafeProject.Models.Cliente", b =>
                {
                    b.Property<string>("cpf")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<int>("idade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.HasKey("cpf");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("PetCafeProject.Models.Fornecedor", b =>
                {
                    b.Property<string>("CNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("CNPJ");

                    b.ToTable("Fornecedor");
                });

            modelBuilder.Entity("PetCafeProject.Models.Produto", b =>
                {
                    b.Property<int?>("Codigo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("FornecedorCNPJ")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Valor")
                        .HasColumnType("REAL");

                    b.HasKey("Codigo");

                    b.HasIndex("FornecedorCNPJ");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("PetCafeProject.Models.Venda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Clientecpf")
                        .HasColumnType("TEXT");

                    b.Property<int>("ProdutoCodigo")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Quantidade")
                        .HasColumnType("INTEGER");

                    b.Property<double>("ValorVenda")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Clientecpf");

                    b.HasIndex("ProdutoCodigo");

                    b.ToTable("Venda");
                });

            modelBuilder.Entity("PetCafeProject.Models.Adocao", b =>
                {
                    b.HasOne("PetCafeProject.Models.Animal", "Animal")
                        .WithMany()
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PetCafeProject.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Clientecpf")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("PetCafeProject.Models.Produto", b =>
                {
                    b.HasOne("PetCafeProject.Models.Fornecedor", "Fornecedor")
                        .WithMany()
                        .HasForeignKey("FornecedorCNPJ");

                    b.Navigation("Fornecedor");
                });

            modelBuilder.Entity("PetCafeProject.Models.Venda", b =>
                {
                    b.HasOne("PetCafeProject.Models.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("Clientecpf");

                    b.HasOne("PetCafeProject.Models.Produto", "Produto")
                        .WithMany()
                        .HasForeignKey("ProdutoCodigo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Produto");
                });
#pragma warning restore 612, 618
        }
    }
}
